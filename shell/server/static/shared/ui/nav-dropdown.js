import{h as t,c as e,a as s}from"./nav-dropdown-html.js";let n;class a extends HTMLLIElement{constructor(){super()}get key(){return this.getAttribute("key")}get language(){return this.getAttribute("language")}get show(){return this.hasAttribute("show")}get constants(){return this.data.constants}static get observedAttributes(){return["show","language","data-headers"]}attributeChangedCallback(t,e,s){this.handleChangedAttribute[t](e,s)}handleChangedAttribute={show:()=>{this.toggler.classList.toggle("show",this.show),this.menu.classList.toggle("show",this.show)},language:(t,e)=>{!this.data||!t||t===e||this.querySelectorAll("[data-dropdown-key]").forEach((t=>{t.textContent=this.constants[this.language][t.dataset.dropdownKey]||t.dataset.dropdownKey}))},"data-headers":(e,s)=>{s&&(this.data=JSON.parse(s)),this.removeAttribute("data-headers"),(e=>{if(!globalThis.validator)return;const s=validator.validate(e,t).errors;return!s.length||(s.forEach((t=>console.error(t))),!1)})(this.data)&&this.render()}};connectedCallback(){this.render()}render=async()=>{this.data&&(this.hidden=this.data.hidden,this.innerHTML||(this.innerHTML=e(this.data,this.language)),this.toggler=this.querySelector("a.dropdown-toggle"),this.menu=this.querySelector("ul.dropdown-menu"),this.containerLinks=this.menu.querySelector("div.container-links"),this.addEventListeners())};addEventListeners=()=>{window.addEventListener("pointermove",this.loadDropdownModule,{once:!0}),this.toggler.addEventListener("click",(t=>{t.stopPropagation(),this.dispatchEvent(new PointerEvent("click",{bubbles:!0,composed:!0}))}))};onNewLink=({payload:t})=>{if(!t)return;const{replace:e=!1,name:n,data:a,constants:r}=t;if(n!==this.key)return;this.setConstants(r);const o=`\n\t\t\t${a.links.reduce(((t,e)=>t+s(e,this.language,this.constants)),"")}\n\t\t`;e&&(this.containerLinks.innerHTML=""),this.containerLinks.insertAdjacentHTML("beforeend",o)};loadDropdownModule=async()=>{await(async()=>{n||(n=(await import("@ui/bootstrap/dropdown.js")).default)})(),this.dropdown=new n(this.querySelector(".dropdown-toggle"))};setConstants(t={}){Object.entries(t).reduce(((t,[e,s])=>(t[e]={...t[e],...s},t)),this.constants)}}customElements.define("nav-dropdown",a,{extends:"li"});export{a as NavDropdown};
//# sourceMappingURL=nav-dropdown.js.map
