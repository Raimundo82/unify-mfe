{"version":3,"file":"ldod-upload-wc.js","sources":["../../ldod-ui/buttons/upload-btn/ldod-upload-wc.js","../../ldod-ui/buttons/upload-btn/ldod-upload.js"],"sourcesContent":["/** @format */\n\nimport buttonsCss from '@ui/bootstrap/buttons-css.js';\nimport formsCss from '@ui/bootstrap/forms-css.js';\nimport rootCss from '@ui/bootstrap/root-css.js';\nimport style from './style.css?inline';\n\nimport UploadComponent from './ldod-upload.js';\nimport { uploadEvent } from '../events-module';\nimport { requestProxy } from '@core';\n\nexport class LdodUpload extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.controller = new AbortController();\n\t\tthis.attachShadow({ mode: 'open' });\n\t\tthis.sheet = new CSSStyleSheet();\n\t\tthis.sheet.replaceSync(rootCss + buttonsCss + formsCss + style);\n\t\tthis.shadowRoot.adoptedStyleSheets = [this.sheet];\n\t}\n\n\tstatic get observedAttributes() {\n\t\treturn ['title', 'width'];\n\t}\n\n\tget title() {\n\t\treturn this.getAttribute('title');\n\t}\n\n\tget isMultiple() {\n\t\treturn this.hasAttribute('multiple');\n\t}\n\tget width() {\n\t\treturn this.getAttribute('width') ?? '';\n\t}\n\n\tget form() {\n\t\treturn this.shadowRoot.querySelector('form');\n\t}\n\n\tconnectedCallback() {\n\t\tthis.render();\n\t}\n\n\tdisconnectedCallback() {\n\t\tthis.controller.abort();\n\t}\n\n\trender() {\n\t\tthis.shadowRoot.innerHTML = UploadComponent({\n\t\t\ttitle: this.title,\n\t\t\tisMultiple: this.isMultiple,\n\t\t});\n\t\tthis.addEventListeners();\n\t}\n\n\taddEventListeners = () => {\n\t\tthis.form.onsubmit = this.handleSubmit;\n\t\tthis.form.oninput = this.handleInput;\n\t};\n\n\thandleSubmit = async e => {\n\t\te.preventDefault();\n\t\tconst data = new FormData(e.target);\n\t\tconst path = this.dataset.url;\n\t\tconst signal = this.controller.signal;\n\t\tconst res = await requestProxy.upload({ path, signal }, data).catch(e => console.error(e));\n\t\tthis.responseData = res;\n\t\tthis.dispatchEvent(uploadEvent(this.id, res));\n\t};\n\n\thandleInput = e => {\n\t\tconst toggleDisabled = value =>\n\t\t\tthis.shadowRoot.querySelector('#loadBtn').toggleAttribute('disabled', value);\n\t\tif (e.target.value.endsWith('.xml') || e.target.value.endsWith('.XML')) {\n\t\t\treturn toggleDisabled(false);\n\t\t}\n\t\ttoggleDisabled(true);\n\t};\n\n\tattributeChangedCallback(name, oldV, newV) {\n\t\tthis.handleChangeAttribute[name](oldV, newV);\n\t}\n\n\thandleChangeAttribute = {\n\t\ttitle: (oldV, newV) => {\n\t\t\tif (oldV && oldV !== newV)\n\t\t\t\tthis.shadowRoot.querySelector('button#loadBtn>span[label]').textContent =\n\t\t\t\t\tthis.title;\n\t\t},\n\t\twidth: () => {\n\t\t\tthis.sheet.insertRule(`form > div {width: ${this.width};}`);\n\t\t\tthis.shadowRoot.adoptedStyleSheets = [this.sheet];\n\t\t},\n\t};\n}\n!customElements.get('ldod-upload') && customElements.define('ldod-upload', LdodUpload);\n","export default ({ title, isMultiple }) => {\n  return /*html*/ `\n    <form enctype=\"multipart/form-data\">\n    \n      <div class=\"input-group\">\n        <input\n          ${isMultiple ? 'multiple' : ''}\n          required\n          type=\"file\"\n          name=${isMultiple ? 'files' : 'file'}\n          class=\"form-control\"\n          id=\"inputFile\"\n          accept=\".xml\"\n        />\n        <button class=\"btn btn-primary\" type=\"submit\" id=\"loadBtn\" disabled>\n          <span label>${title}</span>\n          <span class=\"icon icon-upload\"></span>\n        </button>\n      </div>\n    </form>\n  `;\n};\n"],"names":["LdodUpload","HTMLElement","constructor","super","this","controller","AbortController","attachShadow","mode","sheet","CSSStyleSheet","replaceSync","rootCss","buttonsCss","formsCss","shadowRoot","adoptedStyleSheets","observedAttributes","title","getAttribute","isMultiple","hasAttribute","width","form","querySelector","connectedCallback","render","disconnectedCallback","abort","innerHTML","UploadComponent","addEventListeners","onsubmit","handleSubmit","oninput","handleInput","async","e","preventDefault","data","FormData","target","path","dataset","url","signal","res","requestProxy","upload","catch","console","error","responseData","dispatchEvent","uploadEvent","id","toggleDisabled","value","toggleAttribute","endsWith","attributeChangedCallback","name","oldV","newV","handleChangeAttribute","textContent","insertRule","customElements","get","define"],"mappings":"2MAWO,MAAMA,UAAmBC,YAC/BC,cACCC,QACAC,KAAKC,WAAa,IAAIC,gBACtBF,KAAKG,aAAa,CAAEC,KAAM,SAC1BJ,KAAKK,MAAQ,IAAIC,cACjBN,KAAKK,MAAME,YAAYC,EAAUC,EAAaC,4vBAC9CV,KAAKW,WAAWC,mBAAqB,CAACZ,KAAKK,MAC3C,CAEUQ,gCACH,MAAA,CAAC,QAAS,QACjB,CAEGC,YACI,OAAAd,KAAKe,aAAa,QACzB,CAEGC,iBACI,OAAAhB,KAAKiB,aAAa,WACzB,CACGC,YACI,OAAAlB,KAAKe,aAAa,UAAY,EACrC,CAEGI,WACI,OAAAnB,KAAKW,WAAWS,cAAc,OACrC,CAEDC,oBACCrB,KAAKsB,QACL,CAEDC,uBACCvB,KAAKC,WAAWuB,OAChB,CAEDF,SACMtB,KAAAW,WAAWc,UCjDH,GAAGX,MAAAA,EAAOE,WAAAA,qHAMbA,EAAa,WAAa,iEAGrBA,EAAa,QAAU,8MAMhBF,+GDkCMY,CAAgB,CAC3CZ,MAAOd,KAAKc,MACZE,WAAYhB,KAAKgB,aAElBhB,KAAK2B,mBACL,CAEDA,kBAAoB,KACnB3B,KAAKmB,KAAKS,SAAW5B,KAAK6B,aAC1B7B,KAAKmB,KAAKW,QAAU9B,KAAK+B,WAAA,EAG1BF,aAAeG,MAAMC,IACpBA,EAAEC,iBACF,MAAMC,EAAO,IAAIC,SAASH,EAAEI,QACtBC,EAAOtC,KAAKuC,QAAQC,IACpBC,EAASzC,KAAKC,WAAWwC,OACzBC,QAAYC,EAAaC,OAAO,CAAEN,KAAAA,EAAMG,OAAAA,GAAUN,GAAMU,OAAMZ,GAAKa,QAAQC,MAAMd,KAClFjC,KAAAgD,aAAeN,EACpB1C,KAAKiD,cAAcC,EAAYlD,KAAKmD,GAAIT,GAAI,EAG7CX,YAAcE,IACPmB,MAAAA,EAAiBC,GACtBrD,KAAKW,WAAWS,cAAc,YAAYkC,gBAAgB,WAAYD,GACnEpB,GAAAA,EAAEI,OAAOgB,MAAME,SAAS,SAAWtB,EAAEI,OAAOgB,MAAME,SAAS,QAC9D,OAAOH,GAAe,GAEvBA,GAAe,EAAI,EAGpBI,yBAAyBC,EAAMC,EAAMC,GACpC3D,KAAK4D,sBAAsBH,GAAMC,EAAMC,EACvC,CAEDC,sBAAwB,CACvB9C,MAAO,CAAC4C,EAAMC,KACTD,GAAQA,IAASC,IACpB3D,KAAKW,WAAWS,cAAc,8BAA8ByC,YAC3D7D,KAAKc,MAAA,EAERI,MAAO,KACDlB,KAAAK,MAAMyD,WAAW,sBAAsB9D,KAAKkB,WACjDlB,KAAKW,WAAWC,mBAAqB,CAACZ,KAAKK,MAAK,IAIlD0D,eAAeC,IAAI,gBAAkBD,eAAeE,OAAO,cAAerE"}