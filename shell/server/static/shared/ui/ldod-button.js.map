{"version":3,"file":"ldod-button.js","sources":["../../ldod-ui/buttons/custom-btn/ldod-button.js","../../ldod-ui/buttons/custom-btn/button-html.js"],"sourcesContent":["/** @format */\n\nimport ButtonComponent from './button-html';\nimport buttonsCss from '@ui/bootstrap/buttons-css.js';\nimport rootCss from '@ui/bootstrap/root-css.js';\nexport class LdodButton extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.attachShadow({ mode: 'open' });\n\t\tthis.sheet = new CSSStyleSheet();\n\t\tthis.sheet.replaceSync(buttonsCss + rootCss);\n\t\tthis.shadowRoot.adoptedStyleSheets = [this.sheet];\n\t}\n\n\tget class() {\n\t\treturn this.getAttribute('class') ?? '';\n\t}\n\n\tget type() {\n\t\treturn this.getAttribute('type') ?? '';\n\t}\n\n\tget btnId() {\n\t\treturn this.dataset.btnid;\n\t}\n\n\tget title() {\n\t\treturn this.getAttribute('title');\n\t}\n\n\tget button() {\n\t\tlet id = this.btnId ? `#${this.btnId}` : '';\n\t\treturn this.shadowRoot.querySelector(`button${id}`);\n\t}\n\n\tstatic get observedAttributes() {\n\t\treturn ['title'];\n\t}\n\n\tconnectedCallback() {\n\t\tthis.shadowRoot.innerHTML = ButtonComponent(this.btnId, this.class, this.type, this.title);\n\t\tthis.addEventListeners();\n\t}\n\n\taddEventListeners() {\n\t\ttypeof this.handlers === 'object' &&\n\t\t\tObject.entries(this.handlers).forEach(([event, listener]) => {\n\t\t\t\tthis.button.addEventListener(event, listener);\n\t\t\t});\n\t}\n\n\tattributeChangedCallback(name, oldV, newV) {\n\t\tthis.changeAttribute[name](oldV, newV);\n\t}\n\n\tchangeAttribute = {\n\t\ttitle: (oldV, newV) => {\n\t\t\tif (oldV && oldV !== newV) this.button.textContent = newV;\n\t\t},\n\t};\n\n\tdisconnectedCallback() {}\n}\n\n!customElements.get('ldod-button') && customElements.define('ldod-button', LdodButton);\n","/** @format */\n\nexport default (id, classes, type, title) => {\n\treturn /* html*/ `<button id=${id} class=\"${classes}\" type=\"${type}\" >${title}</button>`;\n};\n"],"names":["LdodButton","HTMLElement","constructor","this","attachShadow","mode","sheet","CSSStyleSheet","replaceSync","buttonsCss","rootCss","shadowRoot","adoptedStyleSheets","class","getAttribute","type","btnId","dataset","btnid","title","button","id","querySelector","observedAttributes","connectedCallback","classes","innerHTML","addEventListeners","handlers","Object","entries","forEach","event","listener","addEventListener","attributeChangedCallback","name","oldV","newV","changeAttribute","textContent","disconnectedCallback","customElements","get","define"],"mappings":"qFAKO,MAAMA,UAAmBC,YAC/BC,sBAECC,KAAKC,aAAa,CAAEC,KAAM,SAC1BF,KAAKG,MAAQ,IAAIC,cACjBJ,KAAKG,MAAME,YAAYC,EAAaC,GACpCP,KAAKQ,WAAWC,mBAAqB,CAACT,KAAKG,MAC3C,CAEGO,YACI,OAAAV,KAAKW,aAAa,UAAY,EACrC,CAEGC,WACI,OAAAZ,KAAKW,aAAa,SAAW,EACpC,CAEGE,YACH,OAAOb,KAAKc,QAAQC,KACpB,CAEGC,YACI,OAAAhB,KAAKW,aAAa,QACzB,CAEGM,aACH,IAAIC,EAAKlB,KAAKa,MAAQ,IAAIb,KAAKa,QAAU,GACzC,OAAOb,KAAKQ,WAAWW,cAAc,SAASD,IAC9C,CAEUE,gCACV,MAAO,CAAC,QACR,CAEDC,oBCrCc,IAACH,EAAII,EAASV,EAAMI,EDsCjChB,KAAKQ,WAAWe,WCtCFL,EDsC8BlB,KAAKa,MCtC/BS,EDsCsCtB,KAAKU,MCtClCE,EDsCyCZ,KAAKY,KCtCxCI,EDsC8ChB,KAAKgB,MCtCnDA,cACHE,YAAaI,YAAkBV,OAAUI,cDsCvEhB,KAAKwB,mBACL,CAEDA,oBAC0B,iBAAlBxB,KAAKyB,UACXC,OAAOC,QAAQ3B,KAAKyB,UAAUG,SAAQ,EAAEC,EAAOC,MACzC9B,KAAAiB,OAAOc,iBAAiBF,EAAOC,EAAQ,GAE9C,CAEDE,yBAAyBC,EAAMC,EAAMC,GACpCnC,KAAKoC,gBAAgBH,GAAMC,EAAMC,EACjC,CAEDC,gBAAkB,CACjBpB,MAAO,CAACkB,EAAMC,KACTD,GAAQA,IAASC,IAAMnC,KAAKiB,OAAOoB,YAAcF,EAAAA,GAIvDG,uBAAyB,GAGzBC,eAAeC,IAAI,gBAAkBD,eAAeE,OAAO,cAAe5C"}