{"version":3,"file":"side-by-side-transcriptions-3e196d12.js","sources":["../src/pages/fragment/components/side-by-side-transcriptions.js"],"sourcesContent":["/** @format */\n\nimport { isSingleAndSourceInter } from '../utils';\nimport { getSourceInter } from '../../fragments/components/source-inter';\nimport { parseRawHTML } from '../../../utils';\nimport checkboxes from './checkboxes';\nimport title from './title';\nimport editorialInterTranscription from './editorial-inter-transcription';\nimport variationsTable from './variations-table';\n\nconst getAlignClass = root =>\n\troot.transcriptionCheckboxes.align ? 'font-monospace' : 'font-georgia';\n\nexport default ({ root, inters }) => {\n\tconst frag = parseRawHTML(/*html*/ `\t\t\n\t\t${checkboxes({ root, checkboxes: ['line', 'align'] })}\n\t\t<div id=\"text-transcriptionsSideBySide\" class=\"sideBySide\">\n\t\t\t${inters.map((inter, key) => getTranscrition(inter, root, key)).join('')}\n\t\t</div>\n\t\t<div id=\"text-meta-side-by-side\" class=\"sideBySide\"></div>\n\t\t<div id=\"text-variations-side-by-side\"></div>\n\t`);\n\n\tfrag.querySelector('div#text-meta-side-by-side').append(\n\t\t...inters.map(inter => getMetaInfo(root, inter))\n\t);\n\n\tfrag.querySelector('div#text-variations-side-by-side').appendChild(\n\t\tvariationsTable({\n\t\t\ttitle: root.getConstants('variations'),\n\t\t\theaders: inters.map(({ shortName, editor }) => ({\n\t\t\t\teditor,\n\t\t\t\tshortName,\n\t\t\t\ttitle: root.data.title,\n\t\t\t})),\n\t\t\tvariations: root.data.variations,\n\t\t})\n\t);\n\treturn frag;\n};\n\nfunction getTranscrition(inter, root, key) {\n\treturn /*html*/ `\n\t\t\t\t<div class=\"text-sideBySideWrapper\">\n\t\t\t\t\t${title({ title: root.data.title })} \n\t\t\t\t\t${\n\t\t\t\t\t\tisSingleAndSourceInter(inter)\n\t\t\t\t\t\t\t? /*html */ `\n\t\t\t\t\t<div class=\"well authorialStyle\" id=\"transcriptionContainer\">\n\t\t\t\t\t\t<p class=\"${getAlignClass(root)}\">\n\t\t\t\t\t\t\t${root.data.transcriptions[key]}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t`\n\t\t\t\t\t\t\t: editorialInterTranscription({\n\t\t\t\t\t\t\t\t\troot,\n\t\t\t\t\t\t\t\t\tclazz: getAlignClass(root),\n\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t\n\t`;\n}\n\nfunction getMetaInfo(root, inter) {\n\tconst frag = parseRawHTML/*html*/ `<div id=\"interMetaInfo\" class=\"well\" style=\"width: 50%;\"></div>`;\n\tfrag.querySelector('div#interMetaInfo').appendChild(getSourceInter(inter, root, 0));\n\treturn frag;\n}\n"],"names":["getAlignClass","root","transcriptionCheckboxes","align","sideBySideTranscriptions","inters","frag","parseRawHTML","checkboxes","map","inter","key","title","data","isSingleAndSourceInter","transcriptions","editorialInterTranscription","clazz","getTranscrition","join","querySelector","append","appendChild","getSourceInter","getMetaInfo","variationsTable","getConstants","headers","shortName","editor","variations"],"mappings":"icAUA,MAAMA,EAAgBC,GACrBA,EAAKC,wBAAwBC,MAAQ,iBAAmB,eAEzDC,EAAe,EAAGH,KAAAA,EAAMI,OAAAA,MACvB,MAAMC,EAAOC,EAAsB,aAChCC,EAAW,CAAEP,KAAAA,EAAMO,WAAY,CAAC,OAAQ,sFAEvCH,EAAOI,KAAI,CAACC,EAAOC,IAwBxB,SAAyBD,EAAOT,EAAMU,GACrC,MAAA,6DAEMC,EAAM,CAAEA,MAAOX,EAAKY,KAAKD,uBAE1BE,EAAuBJ,GAAK,oGAGhBV,EAAcC,uBACvBA,EAAKY,KAAKE,eAAeJ,qDAIzBK,EAA4B,CAC5Bf,KAAAA,EACAgB,MAAOjB,EAAcC,GACrBU,IAAAA,mCAMT,CA9CgCO,CAAgBR,EAAOT,EAAMU,KAAMQ,KAAK,0IAMvEb,OAAAA,EAAKc,cAAc,8BAA8BC,UAC7ChB,EAAOI,KAAIC,GAyChB,SAAqBT,EAAMS,GAC1B,MAAMJ,EAAOC,CAAAA,kEACbD,OAAAA,EAAKc,cAAc,qBAAqBE,YAAYC,EAAeb,EAAOT,EAAM,IACzEK,CACR,CA7CyBkB,CAAYvB,EAAMS,MAG1CJ,EAAKc,cAAc,oCAAoCE,YACtDG,EAAgB,CACfb,MAAOX,EAAKyB,aAAa,cACzBC,QAAStB,EAAOI,KAAI,EAAGmB,UAAAA,EAAWC,OAAAA,MAAc,CAC/CA,OAAAA,EACAD,UAAAA,EACAhB,MAAOX,EAAKY,KAAKD,UAElBkB,WAAY7B,EAAKY,KAAKiB,cAGjBxB,CAAAA"}