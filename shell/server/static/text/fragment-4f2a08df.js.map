{"version":3,"file":"fragment-4f2a08df.js","sources":["../src/pages/fragment/utils.js","../src/pages/fragment/components/frag-nav/data-validation/data-schema-validator.js","../src/pages/fragment/components/frag-nav/nav-panel-html.js","../src/pages/fragment/components/frag-nav/frag-nav-panel.js","../src/pages/fragment/constants.js","../src/pages/fragment/components/frag-nav/frag-nav-container.js","../src/pages/fragment/components/frag-inter/frag-inter.js","../src/pages/fragment/components/virtual/virtual-transcription.js","../src/pages/fragment/frag-orchestrator/frag-orchestrator.js","../src/pages/fragment/fragment.js","../src/pages/fragment/frag-orchestrator/frag-orchestrator-html.js","../src/pages/fragment/components/virtual/virtual-frag-nav.js"],"sourcesContent":["/** @format */\n\nimport { getFragmentInter } from '../../api-requests';\n\nexport const checkBoxes = {\n\tdiff: false,\n\tdel: false,\n\tsub: false,\n\tins: true,\n\tnote: true,\n\tfac: false,\n\tline: false,\n\talign: false,\n\tpbText: null,\n};\n\nexport const getNewFragInter = async (xmlId, urlId) =>\n\tawait getFragmentInter(xmlId, urlId, {\n\t\tinters: [],\n\t\t...checkBoxes,\n\t});\n\nconst isSourceInter = type => type === 'manuscript' || type === 'printed';\n\nexport const isSingleAndSourceInter = inters =>\n\tinters.length === 1 && isSourceInter(inters[0].sourceType);\n\nexport const isSingleAndEditorial = inters =>\n\tinters.length === 1 && !isSourceInter(inters[0].sourceType);\n\nexport const isSideBySide = data => data.transcriptions?.length > 1;\n\nexport const isLineByLine = data => data.transcriptions?.length === 1 && data.inters?.length > 1;\n\nexport const isVirtualInter = urlId =>\n\turlId && ['_ED_CRIT_', '_MS_'].every(key => !urlId.includes(key));\n","/** @format */\n\nimport { ldodValidator } from '@core';\nimport inputSchema from './input-schema.json';\nimport dataSchema from './data-schema.json';\nimport intersSchema from './inters-data-schema.json';\nimport interSchema from './inter-data-schema.json';\n\nldodValidator.addSchema(dataSchema, '/data');\nldodValidator.addSchema(intersSchema, '/inters');\nldodValidator.addSchema(interSchema, '/inter');\n\nexport { ldodValidator, inputSchema };\n","/** @format */\n\nconst checkbox = frag => {\n\treturn /*html*/ `<input name=\"${frag.current.urlId}\" id=\"${frag.externalId}\" ${\n\t\tfrag.checked ? 'checked' : ''\n\t} type=\"checkbox\">`;\n};\n\nconst fragmentInterPath = (xmlId, urlId) => window.references?.text?.fragmentInter?.(xmlId, urlId);\n\nexport default ({ data, type, tooltip }) => {\n\treturn /*html*/ `\n        <div class=\"wrapper\">\n            ${getTitleElement(type, tooltip)} ${data.reduce(\n\t\t(prev, entry) =>\n\t\t\tprev +\n\t\t\t/*html*/ `\n            <div class=\"grid-container\">\n                ${\n\t\t\t\t\tentry.name\n\t\t\t\t\t\t? /*html*/ `\n                <div class=\"caption\">\n                    <a is=\"nav-to\" to=\"${entry.url}\">${entry.name}</a>\n                </div>\n                `\n\t\t\t\t\t\t: ''\n\t\t\t\t} ${entry.inters.reduce((prev, frag) => prev + getRowElement(frag), '')}\n            </div>\n            ${entry.add ? getAddBtn(entry) : ''}`,\n\t\t''\n\t)}\n        </div>`;\n};\n\nfunction getTitleElement(type, content) {\n\treturn /*html*/ `\n        <div class=\"title-container\">\n                <h5 data-key=\"type\">${type}</h5>\n                ${getTooltip(content)}\n        </div>\n    `;\n}\n\nfunction getRowElement(frag) {\n\treturn /*html*/ `\n            <div class=\"grid\">\n                <div>${checkbox(frag)}</div>\n                <div>${getArrow('left', frag.previous)}</div>\n                <div class=\"frag\">\n                    <a\n                        is=\"nav-to\"\n                        to=\"${fragmentInterPath(frag.current.xmlId, frag.current.urlId)}\"\n                    >\n                        ${frag.current.name}\n                    </a>\n                </div>\n                <div>${getArrow('right', frag.next)}</div>\n                <div></div>\n            </div>\n        `;\n}\n\nfunction getTooltip(tooltip) {\n\treturn tooltip\n\t\t? /*html*/ `\n        <span id=\"title-info\" is=\"ldod-span-icon\" icon=\"circle-info\" size=\"12pt\"></span>\n        <ldod-tooltip\n                data-ref=\"span#title-info\"\n                data-tooltip-key=\"tooltip\"\n                placement=\"bottom\"\n                light\n                width=\"200px\"\n                content=\"${tooltip}\"\n        ></ldod-tooltip>\n`\n\t\t: '';\n}\n\nfunction getArrow(side, data) {\n\treturn /*html*/ `\n        <a is=\"nav-to\" ${data ? `to=${fragmentInterPath(data.xmlId, data.urlId)}` : 'hidden'}>\n            <span is=\"ldod-span-icon\" icon=\"chevron-${side}\" size=\"15px\" fill=\"#0d6efd\"></span>\n        </a>\n    `;\n}\n\nfunction getAddBtn(entry) {\n\treturn /*html*/ `\n        <div style=\"text-align: center;\">\n            <button\n                id=\"btn-add\"\n                type=\"button\"\n                data-ve-id=\"${entry.veId}\"\n                data-inter-id=\"${entry.interId}\"\n                class=\"btn btn-sm btn-primary\"\n                title=\"${`Add fragment interpretation to ${entry.acronym}`}\"\n            >\n                <span is=\"ldod-span-icon\" icon=\"plus\" size=\"12px\" fill=\"#fff\" style=\"pointer-events: none;\"></span>\n            </button>\n        </div>\n    `;\n}\n","/** @format */\n\nimport { ldodValidator, inputSchema } from './data-validation/data-schema-validator';\nimport navPanelHtml from './nav-panel-html';\nimport style from './style.css?inline';\nimport '@core-ui';\nimport '@ui/tooltip.js';\nimport buttonsCss from '@ui/bootstrap/buttons-css.js';\nconst sheet = new CSSStyleSheet();\nsheet.replaceSync(buttonsCss + style);\n\nexport default class FragNavPanel extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.checkboxes = [];\n\t\tif (!this.id) this.id = crypto.randomUUID();\n\t\tthis.attachShadow({ mode: 'open' });\n\t\tthis.shadowRoot.adoptedStyleSheets = [sheet];\n\t}\n\n\tstatic get observedAttributes() {\n\t\treturn ['data-input'];\n\t}\n\n\thasInput() {\n\t\treturn this.hasAttribute('data-input');\n\t}\n\n\tconnectedCallback() {\n\t\tthis.render();\n\t}\n\n\trender() {\n\t\tif (!this.hasInput()) return;\n\t\tthis.data = JSON.parse(this.dataset.input ?? '{}');\n\t\tif (!isDataValid(this.data)) return;\n\t\tthis.removeEventListeners();\n\t\tthis.removeAttribute('data-input');\n\t\tthis.shadowRoot.innerHTML = navPanelHtml(this.data);\n\t\tthis.checkboxes = Array.from(this.shadowRoot.querySelectorAll(\"input[type='checkbox']\"));\n\t\tthis.addBtns = Array.from(this.shadowRoot.querySelectorAll('button#btn-add'));\n\t\tthis.addEventListeners();\n\t}\n\n\tattributeChangedCallback(name, prev, curr) {\n\t\tthis.changedAttribute[name]?.(prev, curr);\n\t}\n\n\taddEventListeners = () => {\n\t\tthis.checkboxes.forEach(cb => cb.addEventListener('change', this.onCheckbox));\n\t\tthis.addBtns.forEach(btn => btn.addEventListener('click', this.onAdd));\n\t};\n\n\tremoveEventListeners() {\n\t\tthis.checkboxes.forEach(cb => cb.removeEventListener('change', this.onCheckbox));\n\t}\n\n\tonCheckbox = e => {\n\t\tthis.dispatchEvent(\n\t\t\tgetCustomEvent(`${this.id}:changed`, {\n\t\t\t\tid: e.target.id,\n\t\t\t\tname: e.target.name,\n\t\t\t\tselected: this.checkboxes\n\t\t\t\t\t.filter(cb => cb.checked)\n\t\t\t\t\t.map(({ name, id }) => ({ id, name })),\n\t\t\t})\n\t\t);\n\t};\n\n\tonAdd = e => this.dispatchEvent(getCustomEvent(`${this.id}:clicked`, { target: e.target }));\n\n\tchangedAttribute = {\n\t\t'data-input': (_, curr) => curr && this.render(),\n\t};\n}\n\n!customElements.get('frag-nav-panel') && customElements.define('frag-nav-panel', FragNavPanel);\n\nfunction isDataValid(data) {\n\tconst { errors, valid } = ldodValidator.validate(data, inputSchema);\n\terrors.forEach(er => console.error(er));\n\treturn valid;\n}\n\nfunction getCustomEvent(evtName, detail) {\n\treturn new CustomEvent(evtName, {\n\t\tdetail,\n\t\tbubbles: true,\n\t\tcomposed: true,\n\t});\n}\n","/** @format */\n\nexport default {\n\tpt: {\n\t\twitnesses: 'Testemunhos',\n\t\texperts: 'Edições dos Peritos',\n\t\texpertsTooltip:\n\t\t\t'O mesmo testemunho pode ser interpretado como mais do que um texto pelos editores. Estas variações na divisão de fragmentos baseiam-se quer em marcações autógrafas (traços horizontais ou espaços entre blocos de texto), quer em interpretações sobre a proximidade semântica dos blocos textuais.',\n\t\tdiff: 'Realçar Diferenças',\n\t\tdiffInfo: 'Realça variações entre as transcrições em comparação',\n\t\tdel: 'Mostrar Apagados',\n\t\tdelInfo: 'Mostra texto apagado por Fernando Pessoa',\n\t\tins: 'Realçar Inseridos',\n\t\tinsInfo: 'Realça texto inserido por Fernando Pessoa',\n\t\tsub: 'Realçar Substituições',\n\t\tsubInfo: 'Realça texto apagado e substituído por Fernando Pessoa',\n\t\tnote: 'Mostrar Notas',\n\t\tnoteInfo: 'Mostra a informação sobre as fontes das transcrições',\n\t\tfac: 'Fac-símile',\n\t\tfacInfo: 'imagem dos documentos originais',\n\t\tline: 'Linha-a-linha',\n\t\talign: 'Alinhar Espaços',\n\t\tvariations: 'Tabela de Variações',\n\t\tlineByLineInfo:\n\t\t\t'O gradiente de cor aumenta consoante o número de diferenças entre as transcrições em comparação',\n\t},\n\ten: {\n\t\twitnesses: 'Witnesses',\n\t\texperts: 'Expert Editions',\n\t\texpertsTooltip:\n\t\t\t'The same witness can be interpreted as more than one text by the editors. Variations in fragment division are based either upon autograph marks (such as horizontal rulers or spaces between text blocks) or upon interpretations about semantic relations between text blocks.',\n\t\tdiff: 'Highlight Differences',\n\t\tdiffInfo: 'Highlights variations in compared transcriptions',\n\t\tdel: 'Show Deleted',\n\t\tdelInfo: 'Show deletions by Fernando Pessoa',\n\t\tins: 'Highligh Inserted',\n\t\tinsInfo: 'Highlights additions by Fernando Pessoa',\n\t\tsub: 'Highlight Substitutions',\n\t\tsubInfo: 'Highlights passages deleted for substituiton by Fernando Pessoa',\n\t\tnote: 'Show Notes',\n\t\tnoteInfo: 'Show information about transcription sources',\n\t\tfac: 'Facsimile',\n\t\tfacInfo: 'Image of the original documents',\n\t\tline: 'Line-by-line',\n\t\talign: 'Align Spaces',\n\t\tvariations: 'Variations Table',\n\t\tlineByLineInfo:\n\t\t\t'Colour gradient increases according to the number of differences across compared editions',\n\t},\n\tes: {\n\t\twitnesses: 'Testimonios',\n\t\texperts: 'Ediciones de los Especialistas ',\n\t\texpertsTooltip:\n\t\t\t'El mismo testimonio puede ser interpretado como más de un texto según los editores. Estas variaciones en la división de los fragmentos se basan bien en marcaciones autógrafas (trazos horizontales o espacios entre bloques del texto), bien en interpretaciones sobre la proximidad semántica de los bloques textuales.',\n\t\tdiff: 'Realzar Diferencias',\n\t\tdiffInfo: 'Realza variaciones entre las transcripciones en comparación',\n\t\tdel: 'Mostrar Eliminados',\n\t\tdelInfo: 'Muestra texto eliminado por Fernando Pessoa',\n\t\tins: 'Realzar Acrecentados',\n\t\tinsInfo: 'Realza texto añadido por Fernando Pessoa',\n\t\tsub: 'Realzar Sustituciones',\n\t\tsubInfo: 'Realza texto eliminado y substituido por Fernando Pessoa',\n\t\tnote: 'Mostrar Notas',\n\t\tnoteInfo: 'Muestra la información sobre las fuentes de las transcripciones',\n\t\tfac: 'Facsimile',\n\t\tfacInfo: 'Imagen de los documentos originales',\n\t\tline: 'Línea a línea',\n\t\talign: 'Alinear Espacios',\n\t\tvariations: 'Tabla de Variaciones',\n\t\tlineByLineInfo:\n\t\t\t'El gradiente de color aumenta según el número de diferencias entre las transcripciones en comparación',\n\t},\n};\n","/** @format */\nimport './frag-nav-panel.js';\nimport constants from '../../constants.js';\nimport references from '../../../../references.js';\n/**\n * @param {[]} data\n * @param {string} type\n */\n\nconst dataArray = {\n\t/**\n\t *\n\t * @param {string[]} inters\n\t * @returns\n\t */\n\twitnesses: (data, inters) =>\n\t\tdata.map(entry => ({\n\t\t\tinters: entry.map(inter => ({\n\t\t\t\texternalId: inter.externalId,\n\t\t\t\tcurrent: { xmlId: inter.xmlId, urlId: inter.urlId, name: inter.shortName },\n\t\t\t\tchecked: inters.includes(inter.externalId),\n\t\t\t})),\n\t\t})),\n\n\t/**\n\t *\n\t * @param {string[]} inters\n\t * @returns\n\t */\n\texperts: (data, inters) => {\n\t\treturn data.filter(Boolean).map(entry => ({\n\t\t\tname: entry[0]?.editor,\n\t\t\turl: references.edition(entry[0]?.acronym),\n\t\t\tinters: entry.map(inter => ({\n\t\t\t\texternalId: inter.externalId,\n\t\t\t\tprevious: { xmlId: inter.prevXmlId, urlId: inter.prevUrlId },\n\t\t\t\tcurrent: { xmlId: inter.xmlId, urlId: inter.urlId, name: inter.number.toString() },\n\t\t\t\tnext: { xmlId: inter.nextXmlId, urlId: inter.nextUrlId },\n\t\t\t\tchecked: inters.includes(inter.externalId),\n\t\t\t})),\n\t\t}));\n\t},\n};\n\nexport default function (data, intersSelected, language) {\n\tconst inters = intersSelected;\n\tconst witnessesData = data.sortedSourceInterList;\n\tconst expertsData = Object.values(data.expertsInterMap);\n\n\treturn /*html*/ `\n\t\t<div id=\"text-frag-nav-container\">\n\t\t\t<frag-nav-panel \n\t\t\t\tid=\"witnesses\"\n\t\t\t\tdata-input='${getDataInput('witnesses', language, dataArray.witnesses([witnessesData], inters))}'\n\t\t\t>\n\t\t\t</frag-nav-panel>\n\t\t\t<frag-nav-panel\n\t\t\t\tid=\"experts\"\n\t\t\t\tdata-input='${getDataInput('experts', language, dataArray.experts(expertsData, inters))}'\n\t\t\t>\n\t\t\t</frag-nav-panel>\n\t\t</div>\n\t\t`;\n}\n\nfunction getDataInput(id, lang, data) {\n\treturn JSON.stringify({\n\t\ttype: constants[lang][id],\n\t\ttooltip: constants[lang][`${id}Tooltip`],\n\t\tdata,\n\t});\n}\n","/** @format */\n\nimport { parseRawHTML } from '../../../../utils';\nimport {\n\tcheckBoxes,\n\tisLineByLine,\n\tisSideBySide,\n\tisSingleAndEditorial,\n\tisSingleAndSourceInter,\n\tisVirtualInter,\n} from '../../utils';\nimport constants from '../../constants';\nimport fragmentsConstants from '../../../fragments/constants';\nimport virtualTranscription from '../virtual/virtual-transcription';\nimport style from './frag-inter.css?inline';\nimport { getFragmentInters, updateFragmentInter } from '../../../../api-requests';\n\nclass FragInter extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.transcriptionCheckboxes = checkBoxes;\n\t\tFragInter.instance = this;\n\t}\n\n\tget language() {\n\t\treturn this.getAttribute('language');\n\t}\n\n\tget hasVirtualInters() {\n\t\treturn this.dataset.virtualInters;\n\t}\n\tget hasTextInters() {\n\t\treturn this.dataset.textInters;\n\t}\n\tget hasNoInters() {\n\t\treturn !this.hasTextInters && !this.hasVirtualInters;\n\t}\n\n\tget type() {\n\t\tconst { urlId, textInters, virtualInters } = this.dataset;\n\t\tif (!urlId) return virtualInters ? 'virtual' : 'text';\n\t\tif (isVirtualInter(urlId) && (this.hasNoInters || virtualInters)) return 'virtual';\n\t\treturn this.hasNoInters || textInters ? 'text' : 'virtual';\n\t}\n\tstatic get observedAttributes() {\n\t\treturn ['language'];\n\t}\n\n\tattributeChangedCallback(name, oldV, newV) {\n\t\tthis.handeChangedAttribute[name](oldV, newV);\n\t}\n\n\thandeChangedAttribute = {\n\t\tlanguage: (oldV, newV) => {\n\t\t\toldV && oldV !== newV && this.handleChangedLanguage();\n\t\t},\n\t};\n\n\thandleChangedLanguage = () => {\n\t\tthis.querySelectorAll('[language]').forEach(ele =>\n\t\t\tele.setAttribute('language', this.language)\n\t\t);\n\t\tthis.querySelectorAll('[data-key]').forEach(\n\t\t\tnode => (node.firstChild.textContent = this.getConstants(node.dataset.key))\n\t\t);\n\t\tthis.querySelectorAll('[data-tooltip-key]').forEach(node =>\n\t\t\tnode.setAttribute('content', this.getConstants(node.dataset.tooltipKey))\n\t\t);\n\t};\n\n\tgetConstants(key, ...args) {\n\t\tconst constant = constants[this.language][key] ?? fragmentsConstants[this.language][key];\n\t\treturn args.length ? constant(...args) : constant;\n\t}\n\n\tasync render() {\n\t\tthis.innerHTML = /*html*/ `<style>${style}</style>`;\n\t\tif (+this.hasTextInters >= 1)\n\t\t\tthis.data = await getFragmentInters(this.dataset.xmlId, this.getRequestBody(true));\n\n\t\tthis.onRender[this.type]();\n\t}\n\n\tonRender = {\n\t\tvirtual: () => {\n\t\t\tthis.insertAdjacentHTML(\n\t\t\t\t'beforeend',\n\t\t\t\tvirtualTranscription({\n\t\t\t\t\tlanguage: this.language,\n\t\t\t\t\txmlId: this.dataset.xmlId,\n\t\t\t\t\turlId: this.dataset.urlId,\n\t\t\t\t})\n\t\t\t);\n\t\t},\n\t\ttext: async () => {\n\t\t\tlet element;\n\t\t\tif (this.hasNoInters)\n\t\t\t\telement = parseRawHTML(/*html*/ `<h4 class=\"text-center\">${this.data.title}</h4>`);\n\t\t\telse if (isSingleAndSourceInter(this.data.inters || []))\n\t\t\t\telement = await sourceInter({ root: this, inter: this.data.inters[0] });\n\t\t\telse if (isSingleAndEditorial(this.data.inters ?? []))\n\t\t\t\telement = await editorialInter({ root: this, inter: this.data.inters[0] });\n\t\t\telse if (isSideBySide(this.data))\n\t\t\t\telement = await sideBySideTranscriptions({ root: this, inters: this.data.inters });\n\t\t\telse if (isLineByLine(this.data))\n\t\t\t\telement = await lineByLineTranscriptions({ root: this, inters: this.data.inters });\n\n\t\t\telement && this.appendChild(element);\n\t\t},\n\t};\n\n\trenderTextFragInterpretation = {\n\t\tempty: () => console.log('empty'),\n\t\ttranscription: () => console.log(this.data),\n\t};\n\n\tgetRequestBody(def) {\n\t\tthis.updateTranscriptCheckboxesValue(def);\n\t\treturn {\n\t\t\tinters: this.textIntersSelected.map(item => item.externalId),\n\t\t\t...checkBoxes,\n\t\t};\n\t}\n\n\tupdateTranscriptCheckboxesValue = def => {\n\t\tif (def) return (this.transcriptionCheckboxes = checkBoxes);\n\t\tthis.querySelectorAll(\"div#text-checkBoxesContainer input[type='checkbox']\").forEach(\n\t\t\tinput => (this.transcriptionCheckboxes[input.name] = input.checked)\n\t\t);\n\t};\n\n\thandleTranscriptionCheckboxChange = async () => {\n\t\tthis.data = await updateFragmentInter(\n\t\t\tthis.dataset.xmlId,\n\t\t\tthis.dataset.urlId,\n\t\t\tthis.getRequestBody()\n\t\t);\n\t\tthis.render();\n\t};\n\n\tonChangeFac = ({ page }) => {\n\t\tconst surface = this.data.inters[0].surfaceDetailsList[page];\n\t\tthis.transcriptionCheckboxes.pbText = surface.pbText;\n\t\tupdateFragmentInter(this.dataset.xmlId, this.dataset.urlId, this.getRequestBody()).then(\n\t\t\tdata => {\n\t\t\t\tthis.data = data;\n\t\t\t\tthis.querySelector('div#transcriptionContainer').innerHTML = data.transcriptions[0];\n\t\t\t}\n\t\t);\n\t};\n}\ncustomElements.define('frag-inter', FragInter);\n\nasync function editorialInter({ root, inter }) {\n\treturn (await import('../editorial-inter')).default({ root, inter });\n}\n\nasync function sourceInter({ root, inter }) {\n\treturn (await import('../source-inter.js')).default({ root, inter });\n}\n\nasync function sideBySideTranscriptions({ root, inters }) {\n\treturn (await import('../side-by-side-transcriptions')).default({ root, inters });\n}\n\nasync function lineByLineTranscriptions({ root, inters }) {\n\treturn (await import('../line-by-line-transcriptions')).default({ root, inters });\n}\n","/** @format */\n\nexport default ({ language, xmlId, urlId }) => {\n\treturn /*html*/ `\n        <virtual-transcription\n            xmlid=\"${xmlId}\"\n            urlid=\"${urlId || ''}\"\n            language=\"${language}\"\n        ></virtual-transcription>`;\n};\n","/** @format */\nimport { navigateTo } from '@core';\nimport { getFragment } from '../../../api-requests';\nimport { getNewFragInter as getNewFragInter, isVirtualInter } from '../utils';\nimport fragNav from '../components/frag-nav/frag-nav-container';\nimport '../components/frag-inter/frag-inter';\nimport fragOrchestratorHtml from './frag-orchestrator-html';\nimport virtualFragNav from '../components/virtual/virtual-frag-nav';\n\nfunction getExternalId(inter) {\n\treturn inter.externalId;\n}\n\ncustomElements.define(\n\t'frag-orchestrator',\n\tclass FragOrchestrator extends HTMLElement {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.textIntersSelected = [];\n\t\t\tthis.innerHTML = fragOrchestratorHtml;\n\t\t\tthis.textNavContainer = this.querySelector('#text-fragment-nav-container');\n\t\t\tthis.virtualNavContainer = this.querySelector('#virtual-fragment-nav-container');\n\t\t\tthis.interContainer = this.querySelector('#fragment-inter-container');\n\t\t\tthis.xmlId = history.state.xmlId;\n\t\t\tthis.urlId = history.state.urlId;\n\t\t}\n\n\t\tstatic get observedAttributes() {\n\t\t\treturn ['language'];\n\t\t}\n\n\t\tget language() {\n\t\t\treturn this.getAttribute('language');\n\t\t}\n\t\tget isVirtualInter() {\n\t\t\treturn isVirtualInter(this.urlId);\n\t\t}\n\n\t\tattributeChangedCallback(name, oldV, newV) {\n\t\t\tthis.handeChangedAttribute[name](oldV, newV);\n\t\t}\n\n\t\thandeChangedAttribute = {\n\t\t\tlanguage: (oldV, newV) => {\n\t\t\t\toldV && oldV !== newV && this.handleChangedLanguage();\n\t\t\t},\n\t\t};\n\n\t\thandleChangedLanguage = () => {\n\t\t\tthis.renderFragNavContainer();\n\t\t\tthis.querySelectorAll('[language]').forEach(ele =>\n\t\t\t\tele.setAttribute('language', this.language)\n\t\t\t);\n\t\t};\n\n\t\tasync connectedCallback() {\n\t\t\tthis.addEventListeners();\n\t\t\tif (!this.xmlId) return navigateTo('/');\n\t\t\tawait this.fetchData();\n\t\t\tthis.render();\n\t\t}\n\n\t\tasync fetchData() {\n\t\t\tthis.data =\n\t\t\t\tthis.urlId && !this.isVirtualInter\n\t\t\t\t\t? await getNewFragInter(this.xmlId, this.urlId)\n\t\t\t\t\t: await getFragment(this.xmlId);\n\t\t\tthis.textIntersSelected = this.data.inters || [];\n\t\t}\n\n\t\trender() {\n\t\t\tthis.renderFragNavContainer();\n\t\t\tthis.renderInterContainer();\n\t\t}\n\n\t\trenderFragNavContainer() {\n\t\t\tthis.renderTextNavContainer();\n\t\t\tthis.renderVirtualNavContainer();\n\t\t}\n\n\t\trenderInterContainer() {\n\t\t\tthis.interContainer.innerHTML = /*html*/ `\n\t\t\t<frag-inter\n\t\t\t\tlanguage=\"${this.language}\"\n\t\t\t\tdata-url-id=\"${this.urlId || ''}\"\n\t\t\t\tdata-xml-id=\"${this.xmlId || ''}\"\n\t\t\t\tdata-virtual-inters=\"${this.virtualInters || ''}\"\n\t\t\t\tdata-text-inters='${this.textIntersSelected.length || ''}'\n\t\t\t></frag-inter>\n\t\t\t`;\n\t\t\tconst instance = customElements.get('frag-inter').instance;\n\t\t\tinstance.data = this.data;\n\t\t\tinstance.textIntersSelected = this.textIntersSelected;\n\t\t\tinstance.render();\n\t\t}\n\n\t\trenderTextNavContainer() {\n\t\t\tthis.textNavContainer.innerHTML = fragNav(\n\t\t\t\tthis.data,\n\t\t\t\tthis.textIntersSelected.map(getExternalId),\n\t\t\t\tthis.language\n\t\t\t);\n\t\t}\n\n\t\trenderVirtualNavContainer() {\n\t\t\tthis.virtualNavContainer.innerHTML = virtualFragNav({\n\t\t\t\tlanguage: this.language,\n\t\t\t\txmlId: this.xmlId,\n\t\t\t\turlId: this.textIntersSelected.length ? '' : this.urlId,\n\t\t\t});\n\t\t}\n\n\t\trenderTextInter() {\n\t\t\tthis.interContainer.insertAdjacentHTML('afterbegin', '');\n\t\t}\n\n\t\taddEventListeners() {\n\t\t\tthis.addEventListener('experts:changed', this.onTextInterSelection);\n\t\t\tthis.addEventListener('witnesses:changed', this.onTextInterSelection);\n\t\t\tthis.addEventListener('virtual:inter-selected', this.onVirtualInterSelection);\n\t\t}\n\n\t\tonVirtualInterSelection(e) {\n\t\t\tthis.virtualInters = e.detail.virtualInters;\n\t\t\tthis.textIntersSelected = [];\n\t\t\tthis.urlId = '';\n\t\t\tthis.renderTextNavContainer();\n\t\t\tthis.renderInterContainer();\n\t\t}\n\n\t\tasync onTextInterSelection({ detail }) {\n\t\t\tthis.updadeTextIntersSelection({ externalId: detail.id, urlId: detail.name });\n\t\t\tthis.virtualInters = '';\n\t\t\tthis.renderVirtualNavContainer();\n\t\t\tthis.renderInterContainer();\n\t\t}\n\n\t\tupdadeTextIntersSelection(inter) {\n\t\t\tthis.textIntersSelected.map(item => item.externalId).includes(inter.externalId)\n\t\t\t\t? this.removeFromIntersSelected(inter)\n\t\t\t\t: this.addToIntersSelected(inter);\n\t\t}\n\n\t\taddToIntersSelected(inter) {\n\t\t\tthis.textIntersSelected.push(inter);\n\t\t}\n\n\t\tremoveFromIntersSelected(inter) {\n\t\t\tthis.textIntersSelected = this.textIntersSelected.filter(\n\t\t\t\titem => item.externalId !== inter.externalId\n\t\t\t);\n\t\t}\n\t}\n);\n","/** @format */\n\nimport { isDev } from '../../utils.js';\nimport './frag-orchestrator/frag-orchestrator.js';\n\nlet virtual;\n\nasync function loadVirtualFrags() {\n\tif (virtual || !window.mfes?.includes('virtual')) return;\n\tvirtual = isDev()\n\t\t? await import('virtual/virtual-dev.js').catch(console.error)\n\t\t: await import('virtual').catch(console.error);\n\tvirtual?.loadFragment();\n}\n\nconst mount = async (lang, ref) => {\n\tconst element = document.querySelector(ref);\n\telement.innerHTML = /*html*/ `<frag-orchestrator language=\"${lang}\"></frag-orchestrator>`;\n\tloadVirtualFrags();\n};\n\nconst unMount = () => customElements.get('frag-orchestrator')?.instance?.remove();\n\nconst path = '/fragment/:xmlId/inter/:urlId';\n\nexport { mount, unMount, path };\n","/** @format */\nimport style from './frag-orchestrator.css?inline';\n\nexport default /*html*/ `\n    <style>${style}</style>\n    <div id=\"fragment-container\">\n        <div id=\"fragment-inter-container\"></div>\n        <div id=\"fragment-nav-container\">\n            <div id=\"text-fragment-nav-container\"></div>\n            <div id=\"virtual-fragment-nav-container\"></div>\n        </div>\n    </div>`;\n","/** @format */\n\nimport { isVirtualInter } from '../../utils';\n\nexport default ({ language, xmlId, urlId }) => {\n\treturn /*html*/ `\n\t\t<virtual-frag-nav\n\t\t\tlanguage=\"${language}\"\n\t\t\tfragment=\"${xmlId}\"\n\t\t\t${isVirtualInter(urlId) ? `urlid=\"${urlId}\"` : ''}\t\t\t\t\n\t\t></virtual-frag-nav>`;\n};\n"],"names":["checkBoxes","diff","del","sub","ins","note","fac","line","align","pbText","isSourceInter","type","isSingleAndSourceInter","inters","length","sourceType","isVirtualInter","urlId","every","key","includes","ldodValidator","addSchema","dataSchema","intersSchema","interSchema","fragmentInterPath","xmlId","window","references","text","fragmentInter","navPanelHtml","data","tooltip","content","getTooltip","getTitleElement","reduce","prev","entry","name","url","frag","current","externalId","checked","checkbox","getArrow","previous","next","getRowElement","add","veId","interId","acronym","getAddBtn","side","sheet","CSSStyleSheet","replaceSync","buttonsCss","FragNavPanel","HTMLElement","constructor","this","checkboxes","id","crypto","randomUUID","attachShadow","mode","shadowRoot","adoptedStyleSheets","observedAttributes","hasInput","hasAttribute","connectedCallback","render","JSON","parse","dataset","input","errors","valid","validate","inputSchema","forEach","er","console","error","isDataValid","removeEventListeners","removeAttribute","innerHTML","Array","from","querySelectorAll","addBtns","addEventListeners","attributeChangedCallback","curr","changedAttribute","cb","addEventListener","onCheckbox","btn","onAdd","removeEventListener","e","dispatchEvent","getCustomEvent","target","selected","filter","map","_","evtName","detail","CustomEvent","bubbles","composed","customElements","get","define","constants","pt","witnesses","experts","expertsTooltip","diffInfo","delInfo","insInfo","subInfo","noteInfo","facInfo","variations","lineByLineInfo","en","es","dataArray","inter","shortName","Boolean","editor","edition","prevXmlId","prevUrlId","number","toString","nextXmlId","nextUrlId","getDataInput","lang","stringify","FragInter","super","transcriptionCheckboxes","instance","language","getAttribute","hasVirtualInters","virtualInters","hasTextInters","textInters","hasNoInters","oldV","newV","handeChangedAttribute","handleChangedLanguage","ele","setAttribute","node","firstChild","textContent","getConstants","tooltipKey","args","constant","fragmentsConstants","async","getFragmentInters","getRequestBody","onRender","virtual","insertAdjacentHTML","virtualTranscription","element","parseRawHTML","title","root","import","default","sourceInter","transcriptions","isSideBySide","sideBySideTranscriptions","isLineByLine","lineByLineTranscriptions","editorialInter","appendChild","renderTextFragInterpretation","empty","log","transcription","def","updateTranscriptCheckboxesValue","textIntersSelected","item","handleTranscriptionCheckboxChange","updateFragmentInter","onChangeFac","page","surface","surfaceDetailsList","then","querySelector","getExternalId","textNavContainer","virtualNavContainer","interContainer","history","state","renderFragNavContainer","navigateTo","fetchData","getFragmentInter","getNewFragInter","getFragment","renderInterContainer","renderTextNavContainer","renderVirtualNavContainer","intersSelected","witnessesData","sortedSourceInterList","expertsData","Object","values","expertsInterMap","fragNav","virtualFragNav","renderTextInter","onTextInterSelection","onVirtualInterSelection","updadeTextIntersSelection","removeFromIntersSelected","addToIntersSelected","push","ref","document","mfes","catch","loadFragment","loadVirtualFrags","remove"],"mappings":"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"}