{"version":3,"file":"sources-fea83b61.js","sources":["../src/pages/sources/components/table-data.jsx","../src/pages/sources/components/sources-table.jsx","../src/pages/sources/constants.js","../src/pages/sources/LdodSources.jsx","../src/pages/sources/sources.jsx"],"sourcesContent":["import textReferences from '@src/references';\n\nlet imageViewer;\nconst loadPswp = async () => {\n  imageViewer = (await import('@src/common/image-viewer')).imageViewer;\n};\n\nconst isManuscript = (type) => type === 'manuscript';\n\nexport const getTableData = (node) => {\n  return node.interSources?.map((source, rowIndex) => {\n    return {\n      externalId: source.externalId,\n      data: () => ({\n        docs: source.name,\n        transcription: source.sourceIntersList?.map(({ xmlId, urlId }) => (\n          <a is=\"nav-to\" to={textReferences.fragmentInter(xmlId, urlId)}>\n            {source.title}\n          </a>\n        )),\n        date: source.date,\n        type: (\n          <>\n            {source.sourceType === 'printed' && (\n              <span data-key={`${source.sourceType}`}>\n                {node.getConstants(source.sourceType)}\n              </span>\n            )}\n            {source.handNoteList?.map(({ medium }) => {\n              return (\n                <>\n                  <span data-key=\"manuscript\">\n                    {node.getConstants('manuscript')}\n                  </span>\n                  ({medium?.toUpperCase()})\n                </>\n              );\n            })}\n            {source.typeNoteList?.map(({ medium }) => {\n              return (\n                <>\n                  <span data-key=\"typescript\">\n                    {node.getConstants('typescript')}\n                  </span>\n                  ({medium.toUpperCase()})\n                </>\n              );\n            })}\n          </>\n        ),\n        ldodLabel: isManuscript(source.sourceType) && (\n          <span\n            data-key=\"hadLdoDLabel\"\n            data-args={source.hadLdoDLabel ? 'true' : 'false'}>\n            {node.getConstants('hadLdoDLabel', source.hadLdoDLabel)}\n          </span>\n        ),\n        dimensions:\n          isManuscript(source.sourceType) && source.dimensionList?.length\n            ? source.dimensionList?.map((dim) => {\n                return (\n                  <>\n                    {dim}\n                    <br />\n                  </>\n                );\n              })\n            : '',\n        fac: source.surfaceList?.length ? (\n          <div\n            id={`fact-gallery-${rowIndex}`}\n            class=\"pswp-gallery\"\n            onPointerEnter={loadPswp}>\n            {source.surfaceList?.map((surface, index) => {\n              return (\n                <>\n                  <a\n                    data-pswp-src={`https://ldod.uc.pt/facs/${surface}`}\n                    onClick={() =>\n                      imageViewer?.(`div#fact-gallery-${rowIndex}`)\n                    }\n                    data-pswp-width=\"1500\"\n                    data-pswp-height=\"1250\">\n                    ({++index}) {source.name}\n                  </a>\n                  <br />\n                </>\n              );\n            })}\n          </div>\n        ) : (\n          ''\n        ),\n      }),\n      search: JSON.stringify(source),\n    };\n  });\n};\n","/** @format */\n\nimport { getTableData } from './table-data.jsx';\nimport.meta.env.DEV ? await import('@ui/table-dev.js') : await import('@ui/table.js');\n\nexport default ({ node, constants }) => {\n\treturn (\n\t\t<>\n\t\t\t<ldod-table\n\t\t\t\tid=\"interSourcesTable\"\n\t\t\t\tclasses=\"table table-bordered table-hover\"\n\t\t\t\theaders={constants.headers}\n\t\t\t\tdata={getTableData(node)}\n\t\t\t\tconstants={constants}\n\t\t\t\tdata-searchkey=\"externalId\"></ldod-table>\n\t\t</>\n\t);\n};\n","export default {\n  headers: [\n    'docs',\n    'transcription',\n    'date',\n    'type',\n    'ldodLabel',\n    'dimensions',\n    'fac',\n  ],\n  pt: {\n    interSources: (value) => `Testemunhos (${value})`,\n    docs: 'Documentos',\n    transcription: 'Transcrição',\n    type: 'Tipo',\n    date: 'Data',\n    ldodLabel: 'Marca LdoD',\n    hadLdoDLabel: (bool) => `${Boolean(bool) ? 'Sim' : 'Não'}`,\n    dimensions: 'Dimensões',\n    fac: 'Facsimiles',\n    printed: 'Impresso',\n    manuscript: 'Manuscrito',\n    typescript: 'Datiloscrito',\n    title: 'Título',\n    handNote: 'Manuscript',\n    typeNote: 'Datiloscrito',\n    docsTooltip: 'Documentos',\n    transcriptionTooltip:\n      'Transcrição topográfica feita pela equipa do Arquivo LdoD',\n    dateTooltip: 'Data inscrita ou atribuída ao fragmento',\n    typeTooltip:\n      'Descreve o tipo de documento como manuscrito, datiloscrito ou impresso',\n    ldodLabelTooltip:\n      'Marcação explícita feita por Fernando Pessoa de que o documento pertence ao LdoD',\n    dimensionsTooltip: 'Descreve as dimensões dos testemunhos',\n    facTooltip: 'Imagem dos documentos originais',\n    titleTooltip:\n      'Fac-símiles dos documentos originais de Fernando Pessoa (manuscritos, datiloscritos ou impressos)',\n  },\n  en: {\n    interSources: (value) => `Witnesses (${value})`,\n    docs: 'Documents',\n    transcription: 'Transcription',\n    type: 'Type',\n    date: 'Date',\n    ldodLabel: 'LdoD Mark',\n    hadLdoDLabel: (bool) => `${Boolean(bool) ? 'Yes' : 'No'}`,\n    dimensions: 'Dimensions',\n    fac: 'Facsimiles',\n    printed: 'Printed',\n    manuscript: 'Manuscript',\n    typescript: 'Typescript',\n    title: 'Title',\n    handNote: 'Manuscript',\n    typeNote: 'Datiloscrito',\n    docsTooltip: 'Documents',\n    transcriptionTooltip:\n      'Topographic transcription made by the LdoD Archive team',\n    dateTooltip: 'Date inscribed or ascribed to the fragment',\n    typeTooltip:\n      'Describes the type of document as manuscript, typescript or printed',\n    ldodLabelTooltip:\n      'Explicit marking by Fernando Pessoa stating that the document belongs to the LdoD',\n    dimensionsTooltip: 'Describes the dimensions of the witnesses',\n    facTooltip: 'Image of original documents',\n    titleTooltip:\n      'Facsimiles of original documents by Fernando Pessoa (handwritten, typewritten or printed)',\n  },\n  es: {\n    interSources: (value) => `Testimonios (${value})`,\n    docs: 'Documentos',\n    transcription: 'Transcripción',\n    type: 'Tipo',\n    date: 'Fecha',\n    ldodLabel: 'Marca LdoD',\n    hadLdoDLabel: (bool) => `${Boolean(bool) ? 'Si' : 'No'}`,\n    dimensions: 'Dimensiones',\n    printed: 'Impreso',\n    manuscript: 'Manuscrito',\n    typescript: 'Mecanografiado',\n    title: 'Título',\n    handNote: 'Manuscrito',\n    typeNote: 'Mecanografiado',\n    fac: 'Facsimiles',\n    docsTooltip: 'Documentos',\n    transcriptionTooltip:\n      'Transcripción topográfica realizada por el equipo del Archivo LdoD',\n    dateTooltip: 'Fecha inscrita o atribuida al fragmento',\n    typeTooltip:\n      'Describe el tipo de documento como manuscrito, mecanografiado o impreso',\n    ldodLabelTooltip:\n      'Marcación explícita hecha por Fernando Pessoa para señalar que el documento pertenece al LdoD',\n    dimensionsTooltip: 'Describe las dimensiones de los testimonios',\n    facTooltip: 'Imagen de los documentos originales',\n    titleTooltip:\n      'Facsímiles de los documentos originales de Fernando Pessoa (manuscritos, mecanografiados o impresos)',\n  },\n};\n","/** @format */\n\nimport Title from '@src/common/title.jsx';\nimport SourcesTable from './components/sources-table';\nimport constants from './constants.js';\n\nconst loadTooltip = () => import('@ui/tooltip.js');\nexport class LdodSources extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tget ldodTable() {\n\t\treturn this.querySelector('ldod-table#interSourcesTable');\n\t}\n\n\tget language() {\n\t\treturn this.getAttribute('language');\n\t}\n\tget wrapper() {\n\t\treturn this.querySelector('div#interSourcesWrapper');\n\t}\n\n\tget interSourcesLength() {\n\t\treturn this.interSources.length;\n\t}\n\n\tstatic get observedAttributes() {\n\t\treturn ['language', 'data'];\n\t}\n\n\tgetConstants(key, ...args) {\n\t\tconst constant = constants[this.language][key];\n\t\treturn args.length ? constant(...args) : constant;\n\t}\n\n\tconnectedCallback() {\n\t\tthis.appendChild(<div id=\"interSourcesWrapper\"></div>);\n\t\tthis.render();\n\t\tthis.addEventListeners();\n\t}\n\n\trender() {\n\t\tif (!this.hasAttribute('data')) return;\n\t\tthis.wrapper.innerHTML = '';\n\t\tthis.wrapper.appendChild(\n\t\t\t<>\n\t\t\t\t<div style={{ display: 'flex', justifyContent: 'center' }}>\n\t\t\t\t\t<Title\n\t\t\t\t\t\ttitle={this.getConstants('interSources', this.interSourcesLength)}\n\t\t\t\t\t\targs={this.interSourcesLength}\n\t\t\t\t\t\tkey=\"interSources\"\n\t\t\t\t\t/>\n\t\t\t\t\t<span id=\"titleTooltip\" class=\"icon-flex icon-info\"></span>\n\t\t\t\t</div>\n\t\t\t\t<ldod-tooltip\n\t\t\t\t\tdata-ref=\"div#interSourcesWrapper span#titleTooltip\"\n\t\t\t\t\tdata-tooltipkey=\"titleTooltip\"\n\t\t\t\t\tplacement=\"top\"\n\t\t\t\t\tlight\n\t\t\t\t\twidth=\"250px\"\n\t\t\t\t\tcontent={this.getConstants('titleTooltip')}></ldod-tooltip>\n\n\t\t\t\t<SourcesTable\n\t\t\t\t\tnode={this}\n\t\t\t\t\tconstants={{\n\t\t\t\t\t\theaders: constants.headers,\n\t\t\t\t\t\t...constants[this.language],\n\t\t\t\t\t}}></SourcesTable>\n\t\t\t</>\n\t\t);\n\t}\n\n\tattributeChangedCallback(name, oldV, newV) {\n\t\tthis.handeChangedAttribute[name](oldV, newV);\n\t}\n\n\thandeChangedAttribute = {\n\t\tlanguage: (oldV, newV) => {\n\t\t\tif (oldV && oldV !== newV) this.handleChangedLanguage();\n\t\t},\n\t\tdata: () => {\n\t\t\tthis.render();\n\t\t\tthis.addHeadersTooltips();\n\t\t\tthis.wrapper.addEventListener('pointerenter', loadTooltip);\n\t\t},\n\t};\n\n\taddEventListeners = () => {\n\t\tthis.addEventListener('ldod-table-searched', this.updateTitle);\n\t\tthis.addEventListener('ldod-table-increased', this.handleChangedLanguage);\n\t};\n\n\tupdateTitle = ({ detail }) => {\n\t\tif (this.ldodTable.isFullyLoaded)\n\t\t\tthis.querySelector('h3#title').firstChild.textContent = this.getConstants(\n\t\t\t\t'interSources',\n\t\t\t\tdetail.size\n\t\t\t);\n\t};\n\n\thandleChangedLanguage = () => {\n\t\tthis.querySelectorAll('[data-key]').forEach(node => {\n\t\t\treturn (node.firstChild.textContent = node.dataset.args\n\t\t\t\t? this.getConstants(node.dataset.key, JSON.parse(node.dataset.args))\n\t\t\t\t: this.getConstants(node.dataset.key));\n\t\t});\n\t\tthis.querySelectorAll('[data-tooltipkey]').forEach(tooltip =>\n\t\t\ttooltip.setAttribute('content', this.getConstants(tooltip.dataset.tooltipkey))\n\t\t);\n\t};\n\n\taddHeadersTooltips = () => {\n\t\tthis.ldodTable.querySelectorAll('table>thead>tr>th').forEach(header => {\n\t\t\tthis.wrapper.appendChild(\n\t\t\t\t<ldod-tooltip\n\t\t\t\t\tdata-ref={`thead>tr>th[data-key='${header.dataset.key}']`}\n\t\t\t\t\tdata-tooltipkey={`${header.dataset.key}Tooltip`}\n\t\t\t\t\tplacement=\"top\"\n\t\t\t\t\tcontent={this.getConstants(`${header.dataset.key}Tooltip`)}></ldod-tooltip>\n\t\t\t);\n\t\t});\n\t};\n}\n!customElements.get('ldod-sources') && customElements.define('ldod-sources', LdodSources);\n","import { dataProxy } from '../../api-requests.js';\nimport './LdodSources.jsx';\n\n\nconst mount = async (lang, ref) => {\n\n  const ldodInterSources = document\n    .querySelector(ref)\n    .appendChild(<ldod-sources language={lang}></ldod-sources>);\n  ldodInterSources.interSources = await dataProxy.sources;\n  ldodInterSources.toggleAttribute('data', true);\n};\n\nconst unMount = () => document.querySelector('ldod-sources')?.remove();\n\nconst path = '/sources';\n\nexport { mount, unMount, path };\n"],"names":["imageViewer","loadPswp","async","import","isManuscript","type","getTableData","node","interSources","map","source","rowIndex","externalId","data","docs","name","transcription","sourceIntersList","xmlId","urlId","createElement","is","to","textReferences","fragmentInter","title","date","sourceType","getConstants","handNoteList","medium","createFragment","toUpperCase","typeNoteList","ldodLabel","hadLdoDLabel","dimensions","dimensionList","length","dim","fac","surfaceList","id","class","onPointerEnter","surface","index","onClick","search","JSON","stringify","SourcesTable","constants","classes","headers","pt","value","bool","printed","manuscript","typescript","handNote","typeNote","docsTooltip","transcriptionTooltip","dateTooltip","typeTooltip","ldodLabelTooltip","dimensionsTooltip","facTooltip","titleTooltip","en","es","loadTooltip","LdodSources","HTMLElement","constructor","ldodTable","this","querySelector","language","getAttribute","wrapper","interSourcesLength","observedAttributes","key","args","constant","connectedCallback","appendChild","render","addEventListeners","hasAttribute","innerHTML","style","display","justifyContent","Title","placement","light","width","content","attributeChangedCallback","oldV","newV","handeChangedAttribute","handleChangedLanguage","addHeadersTooltips","addEventListener","updateTitle","detail","isFullyLoaded","firstChild","textContent","size","querySelectorAll","forEach","dataset","parse","tooltip","setAttribute","tooltipkey","header","customElements","get","define","mount","lang","ref","ldodInterSources","document","dataProxy","sources","toggleAttribute","unMount","remove","path"],"mappings":"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"}