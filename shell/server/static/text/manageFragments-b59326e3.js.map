{"version":3,"file":"manageFragments-b59326e3.js","sources":["../src/pages/management/components/table-data.jsx","../src/pages/management/components/fragments-table.jsx","../src/pages/management/components/title.jsx","../src/pages/management/constants.js","../src/pages/management/components/upload-buttons.jsx","../src/pages/management/components/export-buttons.jsx","../src/pages/management/ldod-manage-fragments.jsx","../src/pages/management/manageFragments.jsx"],"sourcesContent":["/** @format */\n\nconst getFragmentRemove = (node, id) => {\n\treturn (\n\t\t<div\n\t\t\tid={`remove-container-${id}`}\n\t\t\tclass=\"text-center\"\n\t\t\ttooltip-ref={`remove-container-${id}`}>\n\t\t\t<span\n\t\t\t\tid={`xmark-icon-${id}`}\n\t\t\t\tdata-id={id}\n\t\t\t\tclass=\"icon icon-xmark\"\n\t\t\t\tonClick={node.handleRemoveFragment}\n\t\t\t/>\n\t\t\t<ldod-tooltip\n\t\t\t\tdata-ref={`div#remove-container-${id}`}\n\t\t\t\tdata-tooltipkey=\"removeFragment\"\n\t\t\t\tplacement=\"top\"\n\t\t\t\tcontent={node.getConstants('removeFragment')}></ldod-tooltip>\n\t\t</div>\n\t);\n};\n\nconst getExport = (node, id) => {\n\tconst handleSelection = ({ target }) => {\n\t\tconst trId = target.dataset.id;\n\t\tnode.querySelector(`table#manageFragmentsTable>tbody>tr[id=\"${trId}\"]`).toggleAttribute(\n\t\t\t'selected'\n\t\t);\n\t\tconst element = node.exportSelectedElement;\n\t\telement.body = element.body.some(id => id === trId)\n\t\t\t? element.body.filter(id => id !== trId)\n\t\t\t: [...element.body, trId];\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tid={`export-container-${id}`}\n\t\t\tclass=\"text-center\"\n\t\t\ttooltip-ref={`export-container-${id}`}\n\t\t\tonClick={handleSelection}>\n\t\t\t<span id={`dark-export-icon-${id}`} data-id={id} class=\"icon icon-dark-export\" />\n\t\t\t<span hidden id={`checked-icon-${id}`} data-id={id} class=\"icon icon-checked\" />\n\t\t\t<ldod-tooltip\n\t\t\t\tdata-ref={`div#export-container-${id}`}\n\t\t\t\tdata-tooltipkey=\"select\"\n\t\t\t\tplacement=\"top\"\n\t\t\t\tcontent={node.getConstants('select')}></ldod-tooltip>\n\t\t</div>\n\t);\n};\n\nexport const getTableData = node => {\n\tconst data = node.fragments?.map(({ externalId, title, xmlId }) => {\n\t\treturn {\n\t\t\texternalId,\n\t\t\ttitle,\n\t\t\txmlId,\n\t\t\tremove: getFragmentRemove(node, externalId),\n\t\t\texport: getExport(node, externalId),\n\t\t};\n\t});\n\n\treturn data?.map(entry => {\n\t\treturn {\n\t\t\t...entry,\n\t\t\tsearch: Object.values(entry).reduce((prev, curr) => {\n\t\t\t\treturn prev.concat(curr.toString(), ',');\n\t\t\t}, ''),\n\t\t};\n\t});\n};\n","/** @format */\n\nimport { getTableData } from './table-data';\nimport.meta.env.DEV ? await import('@ui/table-dev.js') : await import('@ui/table.js');\n\nexport default ({ node, constants }) => {\n\treturn (\n\t\t<>\n\t\t\t<ldod-table\n\t\t\t\tid=\"manageFragmentsTable\"\n\t\t\t\ttooltip-ref\n\t\t\t\tclasses=\"table table-bordered table-hover\"\n\t\t\t\theaders={constants.headers}\n\t\t\t\tdata={getTableData(node)}\n\t\t\t\tlanguage={node.language}\n\t\t\t\tconstants={constants}\n\t\t\t\tdata-searchkey=\"externalId\"></ldod-table>\n\t\t\t<ldod-tooltip\n\t\t\t\tdata-ref=\"thead>tr>th[data-key='export']\"\n\t\t\t\tdata-tooltipkey=\"unselectAll\"\n\t\t\t\tplacement=\"top\"\n\t\t\t\tcontent={node.getConstants('unselectAll')}></ldod-tooltip>\n\t\t</>\n\t);\n};\n","export default ({ numberOfFragments, title }) => {\n  return (\n    <h3\n      id=\"title\"\n      data-key=\"manageFragments\"\n      data-args={numberOfFragments}\n      class=\"text-center\">\n      {title}\n    </h3>\n  );\n};\n","export default {\n  headers: ['xmlId', 'title', 'remove', 'export'],\n  pt: {\n    manageFragments: (value) => `Gerir Fragmentos (${value})`,\n    xmlId: 'XML ID',\n    title: 'Título',\n    remove: 'Remover',\n    export: 'Exportar',\n    removeFragment: 'Remover fragmento',\n    removeAll: 'Remover todos os fragmentos',\n    exportAll: 'Exportar arquivo completo',\n    exportSelected: 'Exportar Fragmentos selecionados',\n    exportRandom: 'Exportar 3 fragmentos aleatórios',\n    select: 'Clique para selecionar/desselecionar',\n    unselectAll: 'Clique para desselecionar todos',\n    uploadSingle: 'Carregar ficheiro TEI com Fragmento',\n    uploadMultiple: 'Carregar vários ficheiros TEI Fragmentos',\n    uploadCorpus: 'Carregar ficheiro TEI com Corpus',\n  },\n  en: {\n    manageFragments: (value) => `Manage Fragments (${value})`,\n    xmlId: 'XML ID',\n    title: 'Title',\n    remove: 'Remove',\n    export: 'Export',\n    removeFragment: 'Remove Fragment',\n    removeAll: 'Remove all fragments',\n    exportAll: 'Export entire archive',\n    exportSelected: 'Export selected Fragments',\n    exportRandom: 'Export 3 random fragments',\n    select: 'Click to select/unselect',\n    unselectAll: 'Click to unselect all',\n    uploadSingle: 'Upload TEI Fragment file',\n    uploadMultiple: 'Upload multiple TEI Fragment files',\n    uploadCorpus: 'Upload TEI Corpus file',\n  },\n  es: {\n    manageFragments: (value) => `Administrar Fragmentos (${value})`,\n    xmlId: 'XML ID',\n    title: 'Título',\n    remove: 'Remover',\n    export: 'Exportar',\n    removeFragment: 'Eliminar fragmento',\n    removeAll: 'Remover todos os fragmentos',\n    exportAll: 'Exportar todos os Fragmentos',\n    exportSelected: 'Exportar Fragmentos selecionados',\n    exportRandom: 'Exportar 3 fragmentos aleatórios',\n    select: 'Clique para selecionar/desselecionar',\n    unselectAll: 'Clique para desselecionar todos',\n    uploadSingle: 'Carregar Fragmento',\n    uploadMultiple: 'Carregar vários Fragmentos',\n    uploadCorpus: 'Carregar ficheiro TEI com Corpus',\n  },\n};\n","/** @format */\n\nimport('@ui/buttons.js').then(({ uploadButton }) => uploadButton());\nconst PATH = '/text/admin';\n\nexport default ({ uploadSingle, uploadMultiple, uploadCorpus }) => {\n\t//onUpload\n\treturn (\n\t\t<div class=\"export-row\">\n\t\t\t<ldod-upload\n\t\t\t\twidth=\"600px\"\n\t\t\t\tdata-button-key=\"uploadCorpus\"\n\t\t\t\ttitle={uploadCorpus}\n\t\t\t\tdata-url={`${PATH}/upload-corpus`}></ldod-upload>\n\t\t\t<ldod-upload\n\t\t\t\twidth=\"600px\"\n\t\t\t\tdata-button-key=\"uploadSingle\"\n\t\t\t\ttitle={uploadSingle}\n\t\t\t\tdata-url={`${PATH}/upload-fragment`}></ldod-upload>\n\t\t\t<ldod-upload\n\t\t\t\twidth=\"600px\"\n\t\t\t\tmultiple\n\t\t\t\tdata-button-key=\"uploadMultiple\"\n\t\t\t\ttitle={uploadMultiple}\n\t\t\t\tdata-url={`${PATH}/upload-fragments`}></ldod-upload>\n\t\t</div>\n\t);\n};\n","/** @format */\n\nimport('@ui/buttons.js').then(({ exportButton }) => exportButton());\nconst PATH = '/text/admin';\n\nexport default ({ exportAll, exportSelected, exportRandom }) => {\n\treturn (\n\t\t<div class=\"export-row\">\n\t\t\t<ldod-export\n\t\t\t\twidth=\"350px\"\n\t\t\t\tdata-button-key=\"exportAll\"\n\t\t\t\ttitle={exportAll}\n\t\t\t\tfile-prefix=\"exported-file\"\n\t\t\t\tdata-url={`${PATH}/export-all`}\n\t\t\t\tmethod=\"GET\"></ldod-export>\n\t\t\t<ldod-export\n\t\t\t\tid=\"exportSelected\"\n\t\t\t\twidth=\"350px\"\n\t\t\t\tdata-button-key=\"exportSelected\"\n\t\t\t\ttitle={exportSelected}\n\t\t\t\tfile-prefix=\"exported-file\"\n\t\t\t\tdata-url={`${PATH}/export-fragments`}\n\t\t\t\tmethod=\"POST\"\n\t\t\t\tbody={[]}></ldod-export>\n\t\t\t<ldod-export\n\t\t\t\twidth=\"350px\"\n\t\t\t\tdata-button-key=\"exportRandom\"\n\t\t\t\ttitle={exportRandom}\n\t\t\t\tfile-prefix=\"exported-file\"\n\t\t\t\tdata-url={`${PATH}/export-random`}\n\t\t\t\tmethod=\"GET\"></ldod-export>\n\t\t</div>\n\t);\n};\n","/** @format */\n\nimport FragsTable from './components/fragments-table.jsx';\nimport Title from './components/title.jsx';\nimport constants from './constants.js';\nimport { ldodEventBus } from '@core';\nimport { removeFragmentById, removeAllFragments, dataProxy } from '@src/api-requests';\n\nimport UploadButtons from './components/upload-buttons.jsx';\nimport ExportButtons from './components/export-buttons.jsx';\n\nimport('@ui/buttons.js').then(({ ldodButton }) => ldodButton());\n\nasync function loadToolip() {\n\tawait import('@ui/tooltip.js');\n}\n\nexport class LdodManageFragments extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tget selectedRows() {\n\t\treturn this.querySelectorAll('table>tbody>tr[selected]');\n\t}\n\n\tget exportSelectedElement() {\n\t\treturn this.querySelector('ldod-export[id=\"exportSelected\"]');\n\t}\n\n\tget exportHeadElement() {\n\t\treturn this.querySelector(\"thead>tr>th[data-key='export']\");\n\t}\n\n\tget language() {\n\t\treturn this.getAttribute('language');\n\t}\n\tget wrapper() {\n\t\treturn this.querySelector('div#manageFragmentsWrapper');\n\t}\n\n\tget numberOfFragments() {\n\t\treturn this.fragments.length;\n\t}\n\n\tstatic get observedAttributes() {\n\t\treturn ['language'];\n\t}\n\n\tgetSelectedFrags() {\n\t\treturn JSON.stringify(this.selectedFrags);\n\t}\n\n\tgetConstants(key, ...args) {\n\t\tconst constant = constants[this.language][key];\n\t\treturn args.length ? constant(...args) : constant;\n\t}\n\n\tasync connectedCallback() {\n\t\tthis.fragments = await dataProxy.adminFragments;\n\t\tthis.appendChild(<div id=\"manageFragmentsWrapper\"></div>);\n\t\tthis.render();\n\t}\n\n\trender() {\n\t\tthis.wrapper.innerHTML = '';\n\t\tthis.wrapper.appendChild(\n\t\t\t<>\n\t\t\t\t<Title\n\t\t\t\t\ttitle={this.getConstants('manageFragments', this.numberOfFragments)}\n\t\t\t\t\tnumberOfFragments={this.numberOfFragments}\n\t\t\t\t/>\n\t\t\t\t<div id=\"removeAllContainer\" class=\"text-center\">\n\t\t\t\t\t<ldod-button\n\t\t\t\t\t\tclass=\"btn btn-danger\"\n\t\t\t\t\t\tdata-button-key=\"removeAll\"\n\t\t\t\t\t\ttitle={this.getConstants('removeAll')}\n\t\t\t\t\t\tonClick={this.handleRemoveAll}></ldod-button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"buttons-column\">\n\t\t\t\t\t<UploadButtons\n\t\t\t\t\t\tuploadSingle={this.getConstants('uploadSingle')}\n\t\t\t\t\t\tuploadMultiple={this.getConstants('uploadMultiple')}\n\t\t\t\t\t\tuploadCorpus={this.getConstants('uploadCorpus')}\n\t\t\t\t\t/>\n\t\t\t\t\t<ExportButtons\n\t\t\t\t\t\texportAll={this.getConstants('exportAll')}\n\t\t\t\t\t\texportSelected={this.getConstants('exportSelected')}\n\t\t\t\t\t\texportRandom={this.getConstants('exportRandom')}\n\t\t\t\t\t\tnode={this}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<FragsTable node={this} constants={constants} />\n\t\t\t</>\n\t\t);\n\t\tthis.addEventListeners();\n\t}\n\n\tattributeChangedCallback(name, oldV, newV) {\n\t\tthis.handeChangedAttribute[name](oldV, newV);\n\t}\n\n\thandeChangedAttribute = {\n\t\tlanguage: (oldV, newV) => {\n\t\t\tif (oldV && oldV !== newV) {\n\t\t\t\tthis.querySelectorAll('[data-key]').forEach(node => {\n\t\t\t\t\treturn (node.firstChild.textContent = node.dataset.args\n\t\t\t\t\t\t? this.getConstants(node.dataset.key, JSON.parse(node.dataset.args))\n\t\t\t\t\t\t: this.getConstants(node.dataset.key));\n\t\t\t\t});\n\t\t\t\tthis.querySelectorAll('[data-tooltipkey]').forEach(ele => {\n\t\t\t\t\tele.setAttribute('content', this.getConstants(ele.dataset.tooltipkey));\n\t\t\t\t});\n\t\t\t\tthis.querySelectorAll('[data-button-key]').forEach(btn => {\n\t\t\t\t\tbtn.setAttribute('title', this.getConstants(btn.dataset.buttonKey));\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t};\n\n\taddEventListeners() {\n\t\tthis.wrapper.addEventListener('pointerenter', loadToolip);\n\t\tthis.exportHeadElement?.addEventListener('click', this.unselectAll);\n\t\tthis.addEventListener('ldod:file-uploaded', this.handleFileUploaded);\n\t\tthis.addEventListener('ldod-table-searched', this.updateTitle);\n\t}\n\n\tupdateTitle = ({ detail }) => {\n\t\tthis.querySelector('h3#title').firstChild.textContent = this.getConstants(\n\t\t\t'manageFragments',\n\t\t\tdetail.size\n\t\t);\n\t};\n\n\tunselectAll = () => {\n\t\tthis.selectedRows.forEach(tr => tr.toggleAttribute('selected'));\n\t\tthis.exportSelectedElement.body = [];\n\t};\n\n\thandleFileUploaded = ({ detail: { payload } }) => {\n\t\tif (!payload) return;\n\t\tif ('ok' in payload) return this.handleMessageOnUploadedFile(payload.ok, payload.message);\n\t\tdataProxy.reset = true;\n\t\tconst nl = document.createElement('br').outerHTML;\n\t\tconst p = document.createElement('p').outerHTML;\n\n\t\tpayload.forEach(fragment => {\n\t\t\tconst { xmlId, uploaded, overwritten } = fragment;\n\t\t\tif (uploaded) {\n\t\t\t\tif (overwritten) this.removeFragmentByXmlId(xmlId);\n\t\t\t\tthis.mutateFragments(this.addFragment(fragment));\n\t\t\t}\n\t\t});\n\n\t\tconst uploadedFrags = payload.filter(frag => frag.uploaded);\n\t\tconst notUploadedFrags = payload.filter(frag => !frag.uploaded);\n\n\t\tconst uploadedFragsResult = uploadedFrags.reduce(\n\t\t\t(accumulated, { xmlId, title, overwritten }) => {\n\t\t\t\treturn `${accumulated}${nl}[${xmlId}(${title})]${\n\t\t\t\t\toverwritten ? ' (overwritten)' : ''\n\t\t\t\t}`;\n\t\t\t},\n\t\t\t`New uploaded fragments: ${uploadedFrags.length}`\n\t\t);\n\n\t\tconst notUploadedFragsResult = notUploadedFrags.reduce(\n\t\t\t(accumulated, { xmlId, title, overwritten }) => {\n\t\t\t\treturn `${accumulated}${nl}[${xmlId}(${title})]${\n\t\t\t\t\toverwritten ? ' (overwritten)' : ''\n\t\t\t\t}`;\n\t\t\t},\n\t\t\t`\\nAlready uploaded fragments: ${notUploadedFrags.length}`\n\t\t);\n\t\tldodEventBus.publish(\n\t\t\t'ldod:message',\n\t\t\tuploadedFragsResult.concat(`${p}`, notUploadedFragsResult)\n\t\t);\n\t};\n\n\thandleMessageOnUploadedFile = (ok, message) => {\n\t\tldodEventBus.publish(ok ? 'ldod:message' : 'ldod:error', message);\n\t};\n\n\thandleRemoveAll = async () => {\n\t\tif (!confirm('Are you sure you want to remove all fragments?')) return;\n\t\tconst res = await removeAllFragments();\n\t\tif (res.ok) this.mutateFragments([]);\n\t\tconst type = res.ok ? 'ldod:message' : 'ldod:error';\n\t\tldodEventBus.publish(type, res.message);\n\t};\n\n\thandleRemoveFragment = async ({ target }) => {\n\t\tconst id = target.dataset.id;\n\t\tconst res = await removeFragmentById(target.dataset.id);\n\t\tif (res.ok) return this.mutateFragments(this.removeFragmentById(id));\n\t\tldodEventBus.publish('ldod:error', res.message);\n\t};\n\n\tremoveFragmentById(id) {\n\t\treturn this.fragments.filter(frag => frag.externalId !== id);\n\t}\n\n\tremoveFragmentByXmlId(xmlId) {\n\t\tthis.fragments = this.fragments.filter(frag => frag.xmlId !== xmlId);\n\t}\n\n\taddFragment(fragment) {\n\t\tthis.fragments.reverse().push(fragment);\n\t\treturn this.fragments.reverse();\n\t}\n\n\tmutateFragments(newFragments) {\n\t\tthis.fragments = newFragments;\n\t\tthis.render();\n\t}\n}\n!customElements.get('ldod-manage-fragments') &&\n\tcustomElements.define('ldod-manage-fragments', LdodManageFragments);\n","import './ldod-manage-fragments.jsx';\n\nconst mount = async (lang, ref) => {\n  document\n    .querySelector(ref)\n    .appendChild(\n      <ldod-manage-fragments language={lang}></ldod-manage-fragments>\n    );\n};\n\nconst unMount = () => document.querySelector('ldod-manage-fragments')?.remove();\n\nconst path = '/manage-fragments';\n\nexport { mount, unMount, path };\n"],"names":["getFragmentRemove","node","id","createElement","class","onClick","handleRemoveFragment","placement","content","getConstants","getExport","target","trId","dataset","querySelector","toggleAttribute","element","exportSelectedElement","body","some","filter","hidden","getTableData","fragments","map","externalId","title","xmlId","remove","export","entry","search","Object","values","reduce","prev","curr","concat","toString","import","FragsTable","constants","createFragment","classes","headers","data","language","Title","numberOfFragments","pt","manageFragments","value","removeFragment","removeAll","exportAll","exportSelected","exportRandom","select","unselectAll","uploadSingle","uploadMultiple","uploadCorpus","en","es","then","uploadButton","PATH","UploadButtons","width","multiple","exportButton","ExportButtons","method","async","loadToolip","ldodButton","LdodManageFragments","HTMLElement","constructor","selectedRows","this","querySelectorAll","exportHeadElement","getAttribute","wrapper","length","observedAttributes","getSelectedFrags","JSON","stringify","selectedFrags","key","args","constant","dataProxy","adminFragments","appendChild","render","innerHTML","handleRemoveAll","addEventListeners","attributeChangedCallback","name","oldV","newV","handeChangedAttribute","forEach","firstChild","textContent","parse","ele","setAttribute","tooltipkey","btn","buttonKey","addEventListener","handleFileUploaded","updateTitle","detail","size","tr","payload","handleMessageOnUploadedFile","ok","message","reset","nl","document","outerHTML","p","fragment","uploaded","overwritten","removeFragmentByXmlId","mutateFragments","addFragment","uploadedFrags","frag","notUploadedFrags","uploadedFragsResult","accumulated","notUploadedFragsResult","ldodEventBus","publish","confirm","res","removeAllFragments","type","removeFragmentById","reverse","push","newFragments","customElements","get","define","mount","lang","ref","unMount","path"],"mappings":"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"}