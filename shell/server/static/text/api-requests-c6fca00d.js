import{fetcher as a,fetchProxy as t}from"@core";const e="http://localhost:8000/api",s="/text",n=s+"/admin",r={fragments:async()=>(await t(`${e+s}/fragments`,{method:"GET"})).json().catch(console.error),sources:async()=>(await t(`${e+s}/sources`,{method:"GET"})).json().catch(console.error),adminFragments:async()=>(await t(`${e+n}/fragments`,{method:"GET"})).json().catch(console.error)},o=new Proxy({},{get:async(a,t)=>(a[t]||(a[t]=await r[t]()),a[t]),set:(a,t,e)=>("reset"===t&&e?Reflect.ownKeys(a).forEach((t=>delete a[t])):a[t]=e,!0)}),c=async t=>(o.reset=!0,await a.post(`${n}/fragment-delete/${t}`,null)),l=async()=>(o.reset=!0,await a.post(`${n}/fragments-delete-all`,null)),i=async t=>await a.get(`${s}/acronym/${t}`,null),m=async t=>await a.get(`${s}/fragment/${t}`,null),y=async(t,e,n)=>await a.post(`${s}/fragment/${t}/inter/${e}`,n),$=async(t,e)=>await a.post(`${s}/fragment/${t}/inters`,e),g=async(a,t,e)=>e.inters.length>1||!t?await $(a,e):await y(a,t,e);export{c as a,$ as b,m as c,o as d,i as e,y as g,l as r,g as u};
//# sourceMappingURL=api-requests-c6fca00d.js.map
