{"version":3,"file":"ldod-ve-taxonomy-d298a690.js","sources":["../src/pages/virtual-editions/pages/index/components/taxonomy/constants.js","../src/pages/virtual-editions/pages/index/components/taxonomy/merge-delete-buttons.jsx","../src/pages/virtual-editions/pages/index/components/taxonomy/taxonomy-table.jsx","../src/pages/virtual-editions/pages/index/components/taxonomy/taxonomy-component.jsx","../src/pages/virtual-editions/pages/index/components/taxonomy/taxonomy-api-requests.js","../src/pages/virtual-editions/pages/index/components/taxonomy/ldod-ve-taxonomy.jsx"],"sourcesContent":["/** @format */\n\nexport default {\n\ttaxonomyHeaders: ['category', 'fragments', 'actions'],\n\ttopicsHeaders: ['topics', 'fragments'],\n\tpt: {\n\t\taddCategory: 'Adicionar Categoria',\n\t\tcategoryName: 'Nome da categoria',\n\t\tgenerateTopics: 'Gerar Tópicos',\n\t\tfragments: 'Fragmentos',\n\t\tmerge: 'Juntar Categorias',\n\t\tdelete: 'Apagar Categorias',\n\t\taddCategoryInfo: 'Adicionar categoria à Taxonomia',\n\t\tmergeCategoryInfo:\n\t\t\t'Juntar duas ou mais categorias da Taxonomia (selecionadas na tabela em baixo)',\n\t\tdeleteCategoryInfo:\n\t\t\t'Remover uma ou mais categoria da Taxonomia (selecionadas na tabela em baixo)',\n\t\tgenerateTopicsInfo: 'A Taxonomia gerada agrupa os fragmentos de acordo com os parâmetros',\n\t\tedition: 'Edição',\n\t\ttopics: 'Tópicos',\n\t\twords: 'Palavras',\n\t\tcut: 'Corte',\n\t\titerations: 'Iterações',\n\t\tgenerate: 'Gerar',\n\t\textract: 'Extrair',\n\t\taddCats: 'Adicionar Categorias',\n\t\ttopicsInfo:\n\t\t\t'Número de grupos de fragmentos a gerar (tem impacto no algoritmo de geração e deve ser inferior ao número total de fragmentos na edição virtual)',\n\t\twordsInfo:\n\t\t\t'Número de palavras a usar no nome da categoria (não tem impacto no algoritmo de geração, serve apenas para definir o número de palavras a usar)',\n\t\tcutInfo:\n\t\t\t'Percentagem mínima necessária para um fragmento ser incluído num agrupamento (tem impacto no algoritmo de geração)',\n\t\titerationsInfo:\n\t\t\t'Número de vezes que o algoritmo de geração executa para produzir resultados (tem impacto no algoritmo de geração, devendo ser superior a 1500)',\n\t\textractInfo:\n\t\t\t'Nova categoria resultante da seleção de um subconjunto fragmentos da categoria atual',\n\t\tgenerateTopicsTitle: 'Adição de categorias aplicando um algoritmo de geração de tópicos',\n\t\tactions: 'Acções',\n\t\tsubmit: 'Actualizar',\n\t\tname: 'Nome',\n\t\tupdateCategoryName: 'Actualizar nome da categoria',\n\t\textractFrags: 'Criar nova Categoria a partir de um conjunto de Fragmentos',\n\t\tmultipleFrags: 'Fragmentos (seleção múltipla)',\n\t\tusedIn: 'Usado em',\n\t\tpublicContent: 'Conteúdo Público',\n\t},\n\ten: {\n\t\taddCategory: 'Add Category',\n\t\tcategoryName: 'Category name',\n\t\tgenerateTopics: 'Generate Topics',\n\t\tfragments: 'Fragments',\n\t\tmerge: 'Merge selected',\n\t\tdelete: 'Delete selected',\n\t\taddCategoryInfo: 'Add category to the Taxonomy',\n\t\tmergeCategoryInfo:\n\t\t\t'Merge two or more selected categories from the Taxonomy (selected from the table below)',\n\t\tdeleteCategoryInfo:\n\t\t\t'Delete one or more selected categories from the Taxonomy (selected from the table below)',\n\t\tgenerateTopicsInfo: 'The generated Taxonomy aggregates fragments according the parameters',\n\t\tedition: 'Edition',\n\t\ttopics: 'Topics',\n\t\twords: 'Words',\n\t\tcut: 'Threshold',\n\t\titerations: 'Iterations',\n\t\tgenerate: 'Generate',\n\t\taddCats: 'Add Categories',\n\t\textract: 'Extract',\n\t\ttopicsInfo:\n\t\t\t'Number of fragment groups to be generated (relevant for the generation algorithm; it must be lower than total number of fragments in the virtual edition)',\n\t\twordsInfo:\n\t\t\t'Number of words to be used in the category name (does not have impact on the generation algorithm and it only defines the number of words that will be used)',\n\t\tcutInfo:\n\t\t\t'Minimum required percentage for a fragment to be included in a group (relevant for the generation algorithm)',\n\t\titerationsInfo:\n\t\t\t'Number of times that the generation algorithm has to execute in order to produce results (relevant for the generation algorithm; it must be above 1500)',\n\t\textractInfo:\n\t\t\t'New category resulting from the selection of a subset of fragments belonging to the current category',\n\t\tgenerateTopicsTitle: 'Add categories using a topic modeling algorithm',\n\t\tactions: 'Actions',\n\t\tsubmit: 'Update',\n\t\tname: 'Name',\n\t\tupdateCategoryName: 'Update category name',\n\t\textractFrags: 'Create new Category by extracting a set of Fragments',\n\t\tmultipleFrags: 'Fragments (multiple selection)',\n\t\tusedIn: 'Used in',\n\t\tpublicContent: 'Public Content',\n\t},\n\tes: {\n\t\taddCategory: 'Añadir Categoría',\n\t\tcategoryName: 'Nombre de la categoría',\n\t\tgenerateTopics: 'Generar Tópicos',\n\t\tfragments: 'Fragmentos',\n\t\tmerge: 'Fundir selecionadas',\n\t\tdelete: 'Eliminar selecionadas',\n\t\taddCategoryInfo: 'Añadir categoría a la Taxonomía',\n\t\tmergeCategoryInfo:\n\t\t\t'Fundir dos o más categorías seleccionadas de la Taxonomía (seleccionadas en la tabla siguiente)',\n\t\tdeleteCategoryInfo:\n\t\t\t'Eliminar una o más categorías seleccionadas de la Taxonomía (seleccionadas en la tabla siguiente)',\n\t\tgenerateTopicsInfo:\n\t\t\t'La Taxonomia generada agrupa los fragmentos de acuerdo con los parámetros',\n\t\tedition: 'Edición',\n\t\ttopics: 'Temas',\n\t\twords: 'Palabras',\n\t\tcut: 'Limite',\n\t\titerations: 'Iteraciones',\n\t\tgenerate: 'Generar',\n\t\taddCats: 'Añadir Categorías',\n\t\textract: 'Extraer',\n\t\ttopicsInfo:\n\t\t\t'Número de grupos de fragmentos a generar (tiene impacto en el algoritmo de generacíon e debe ser menor que el número total de fragmentos en la edición virtual)',\n\t\twordsInfo:\n\t\t\t'Número de palabras utilizadas en el nombre de la categoría (no tiene impacto en el algoritmo de generacíon, sólo sirve para definir el número de palabras a utilizar)',\n\t\tcutInfo:\n\t\t\t'Porcentaje mínimo necesario para que un fragmento sea incluido en un grupo (tiene impacto en el algoritmo de generacíon)',\n\t\titerationsInfo:\n\t\t\t'Número de veces que el algoritmo de generación ejecuta para producir resultados (tiene impacto en el algoritmo de generacíon, debe ser superior a 1500)',\n\t\tgenerateTopicsTitle: 'Añadir categorías aplicando un algoritmo de generación de tópicos',\n\t\textractInfo:\n\t\t\t'Nueva categoría resultante de la selección de un subconjunto de fragmentos de la categoría actual',\n\t\tactions: 'Acciónes',\n\t\tsubmit: 'Actualizar',\n\t\tname: 'Nombre',\n\t\tupdateCategoryName: 'Actualizar el nombre de la categoría',\n\t\textractFrags: 'Crear una nueva Categoría extrayendo un conjunto de Fragmentos',\n\t\tmultipleFrags: 'Fragmentos (selección múltiple)',\n\t\tusedIn: 'Utilizado en',\n\t\tpublicContent: 'Contenido público',\n\t},\n};\n","/** @format */\n\nexport const MergeButton = ({ node }) => {\n\treturn (\n\t\t<div id=\"mergeCategory\">\n\t\t\t<button\n\t\t\t\tstyle={{ height: '100%', width: '200px' }}\n\t\t\t\tonClick={node.onMergeCategories}\n\t\t\t\ttype=\"button\"\n\t\t\t\tinactive={node.selectedRows < 2}\n\t\t\t\tclass=\"btn btn-sm btn-primary\">\n\t\t\t\t<span is=\"ldod-span-icon\" icon=\"object-group\" size=\"16px\" fill=\"#fff\"></span>\n\t\t\t\t<span data-virtual-key=\"mergeCategory\">{node.getConstants('merge')}</span>\n\t\t\t</button>\n\t\t\t<ldod-tooltip\n\t\t\t\tdata-ref=\"div#mergeCategory>button\"\n\t\t\t\tdata-virtual-tooltip-key=\"mergeCategoryInfo\"\n\t\t\t\tplacement=\"top\"\n\t\t\t\twidth=\"300px\"\n\t\t\t\tcontent={node.getConstants('mergeCategoryInfo')}></ldod-tooltip>\n\t\t</div>\n\t);\n};\n\nexport const DeleteButton = ({ node }) => {\n\treturn (\n\t\t<div id=\"deleteCategory\">\n\t\t\t<button\n\t\t\t\tstyle={{ height: '100%', width: '200px' }}\n\t\t\t\tonClick={() => node.onDeleteCategories()}\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-sm btn-danger\"\n\t\t\t\tinactive={!node.selectedRows}>\n\t\t\t\t<span is=\"ldod-span-icon\" icon=\"trash\" size=\"16px\" fill=\"#fff\"></span>\n\t\t\t\t<span data-virtual-key=\"deleteCategory\">{node.getConstants('delete')}</span>\n\t\t\t</button>\n\n\t\t\t<ldod-tooltip\n\t\t\t\tdata-ref=\"div#deleteCategory>button\"\n\t\t\t\tdata-virtual-tooltip-key=\"deleteCategoryInfo\"\n\t\t\t\tplacement=\"top\"\n\t\t\t\twidth=\"300px\"\n\t\t\t\tcontent={node.getConstants('deleteCategoryInfo')}></ldod-tooltip>\n\t\t</div>\n\t);\n};\n","/** @format */\n\nimport references from '@src/references';\nimport { textFragmentInter } from '../../../../../../external-deps';\n\nexport default ({ node }) => {\n\treturn (\n\t\t<ldod-table\n\t\t\tid=\"virtual-taxonomyTable\"\n\t\t\tclasses=\"table  table-hover\"\n\t\t\theaders={node.constants.taxonomyHeaders}\n\t\t\tdata-rows={node.taxonomy.categories.length}\n\t\t\tdata={node.taxonomy.categories\n\t\t\t\t.sort((a, b) => a.name.localeCompare(b.name))\n\t\t\t\t.map(cat => ({\n\t\t\t\t\texternalId: cat.externalId,\n\t\t\t\t\tdata: () => ({\n\t\t\t\t\t\tcategory: (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tis=\"nav-to\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\tto={references.category(cat.veAcronym, cat.name)}>\n\t\t\t\t\t\t\t\t{cat.name}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t),\n\t\t\t\t\t\tfragments: cat.veInters.map(inter => (\n\t\t\t\t\t\t\t<div key={crypto.randomUUID()}>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\tis=\"nav-to\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\tto={textFragmentInter(inter.xmlId, inter.urlId)}>\n\t\t\t\t\t\t\t\t\t{inter.title}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)),\n\t\t\t\t\t\tactions: (\n\t\t\t\t\t\t\t<div class=\"flex-center\">\n\t\t\t\t\t\t\t\t{cat.veInters.length > 1 && (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tis=\"ldod-span-icon\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"extract-icon\"\n\t\t\t\t\t\t\t\t\t\t\ticon=\"object-ungroup\"\n\t\t\t\t\t\t\t\t\t\t\tfill=\"#0c4ef6\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"15px\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => node.onExtractFrags(cat)}></span>\n\t\t\t\t\t\t\t\t\t\t<ldod-tooltip\n\t\t\t\t\t\t\t\t\t\t\tdata-ref={`tr[id='${cat.externalId}'] span#extract-icon`}\n\t\t\t\t\t\t\t\t\t\t\tdata-virtual-tooltip-key=\"extractIcon\"\n\t\t\t\t\t\t\t\t\t\t\twidth=\"300px\"\n\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\"\n\t\t\t\t\t\t\t\t\t\t\tcontent={node.getConstants(\n\t\t\t\t\t\t\t\t\t\t\t\t'extractInfo'\n\t\t\t\t\t\t\t\t\t\t\t)}></ldod-tooltip>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\ttitle=\"Edit category name\"\n\t\t\t\t\t\t\t\t\tis=\"ldod-span-icon\"\n\t\t\t\t\t\t\t\t\tid=\"edit-icon\"\n\t\t\t\t\t\t\t\t\ticon=\"pen-to-square\"\n\t\t\t\t\t\t\t\t\tfill=\"#0c4ef6\"\n\t\t\t\t\t\t\t\t\tsize=\"15px\"\n\t\t\t\t\t\t\t\t\tonClick={() => node.onOpenEditModal(cat)}></span>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\ttitle=\"Delete category from the Taxonomy\"\n\t\t\t\t\t\t\t\t\tis=\"ldod-span-icon\"\n\t\t\t\t\t\t\t\t\tid=\"trash-icon\"\n\t\t\t\t\t\t\t\t\ticon=\"trash-can\"\n\t\t\t\t\t\t\t\t\tfill=\"#dc3545\"\n\t\t\t\t\t\t\t\t\tsize=\"15px\"\n\t\t\t\t\t\t\t\t\tonClick={() => node.onDeleteCategories(cat.externalId)}></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t),\n\t\t\t\t\t}),\n\t\t\t\t\tsearch: JSON.stringify(cat),\n\t\t\t\t}))}\n\t\t\tconstants={node.constants[node.language]}\n\t\t\tdata-searchkey=\"externalId\"></ldod-table>\n\t);\n};\n","/** @format */\n\nimport { isDev } from '@src/utils';\nimport references from '@src/references';\nimport { DeleteButton, MergeButton } from './merge-delete-buttons';\nimport TaxonomyTable from './taxonomy-table';\n\nconst onPublicContent = (target, node) => {\n\tconst popover = node.shadowRoot.querySelector('ldod-popover');\n\tpopover.element = () => (\n\t\t<>\n\t\t\t<ul class=\"drop-menu\" style={{ minWidth: `${target.clientWidth}px` }}>\n\t\t\t\t<li>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\tclass=\"drop-item\"\n\t\t\t\t\t\tis=\"nav-to\"\n\t\t\t\t\t\tto={`${isDev() ? '' : '/ldod-mfes'}${references.virtualEdition(\n\t\t\t\t\t\t\tnode.taxonomy.veAcronym\n\t\t\t\t\t\t)}`}>\n\t\t\t\t\t\t{node.taxonomy.veAcronym}\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</>\n\t);\n\n\tpopover.target = target;\n\tpopover.toggleAttribute('show');\n};\n\nconst onUsedIn = (target, node) => {\n\tconst popover = node.shadowRoot.querySelector('ldod-popover');\n\tpopover.element = () => (\n\t\t<>\n\t\t\t<ul class=\"drop-menu\" style={{ minWidth: `${target.clientWidth}px` }}>\n\t\t\t\t{node.taxonomy.usedIn.map(ed => (\n\t\t\t\t\t<li key={crypto.randomUUID()}>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\tclass=\"drop-item\"\n\t\t\t\t\t\t\tis=\"nav-to\"\n\t\t\t\t\t\t\tto={`${isDev() ? '' : '/ldod-mfes'}${references.virtualEdition(ed)}`}>\n\t\t\t\t\t\t\t{ed}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</>\n\t);\n\n\tpopover.target = target;\n\tpopover.toggleAttribute('show');\n};\n\nexport default ({ node }) => {\n\treturn (\n\t\t<div style={{ padding: '20px' }} id=\"taxonomyComponent\">\n\t\t\t<div>\n\t\t\t\t<div class=\"flex-center\" style={{ marginBottom: '10px' }}>\n\t\t\t\t\t<button\n\t\t\t\t\t\tstyle={{ width: '200px' }}\n\t\t\t\t\t\tid=\"publicContent\"\n\t\t\t\t\t\tclass=\"btn btn-sm btn-secondary\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\topen-popover\n\t\t\t\t\t\tonClick={({ target }) => onPublicContent(target, node)}>\n\t\t\t\t\t\t{node.getConstants('publicContent')}\n\t\t\t\t\t\t<ldod-popover data-distance=\"0\"></ldod-popover>\n\t\t\t\t\t</button>\n\n\t\t\t\t\t{node.taxonomy.usedIn.length && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tstyle={{ width: '200px' }}\n\t\t\t\t\t\t\tid=\"usedIn\"\n\t\t\t\t\t\t\tclass=\"btn btn-sm btn-secondary\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\topen-popover\n\t\t\t\t\t\t\tonClick={({ target }) => onUsedIn(target, node)}>\n\t\t\t\t\t\t\t{node.getConstants('usedIn')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div id=\"virtual-categoryActionsContainer\" class=\"flex-center\">\n\t\t\t\t\t<form onSubmit={node.onAddCategory}>\n\t\t\t\t\t\t<div id=\"catInputName\" class=\"input-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tstyle={{ width: '200px' }}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tid=\"addCategoryInput\"\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclass=\"form-control\"\n\t\t\t\t\t\t\t\tplaceholder={node.getConstants('categoryName')}\n\t\t\t\t\t\t\t\taria-label=\"New category's name\"\n\t\t\t\t\t\t\t\taria-describedby=\"category-add-button\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tstyle={{ width: '200px' }}\n\t\t\t\t\t\t\t\tid=\"addCategory\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tclass=\"btn btn-sm btn-primary\">\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tis=\"ldod-span-icon\"\n\t\t\t\t\t\t\t\t\ticon=\"plus\"\n\t\t\t\t\t\t\t\t\tfill=\"#fff\"\n\t\t\t\t\t\t\t\t\tsize=\"16px\"></span>\n\t\t\t\t\t\t\t\t<span data-virtual-key=\"addCategory\">\n\t\t\t\t\t\t\t\t\t{node.getConstants('addCategory')}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t\t<MergeButton node={node} />\n\t\t\t\t\t<button\n\t\t\t\t\t\tstyle={{ width: '200px' }}\n\t\t\t\t\t\tid=\"generateTopics\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclass=\"btn btn-sm btn-primary\"\n\t\t\t\t\t\tonClick={node.onGenerateTopics}>\n\t\t\t\t\t\t<span is=\"ldod-span-icon\" icon=\"gear\" size=\"16px\" fill=\"#fff\"></span>\n\t\t\t\t\t\t<span data-virtual-key=\"generateTopics\">\n\t\t\t\t\t\t\t{node.getConstants('generateTopics')}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<DeleteButton node={node} />\n\t\t\t\t</div>\n\t\t\t\t{['addCategory', 'generateTopics'].map(id => (\n\t\t\t\t\t<ldod-tooltip\n\t\t\t\t\t\tkey={crypto.randomUUID()}\n\t\t\t\t\t\tdata-ref={`button#${id}`}\n\t\t\t\t\t\tdata-virtual-tooltip-key={`${id}Info`}\n\t\t\t\t\t\tplacement=\"top\"\n\t\t\t\t\t\twidth=\"300px\"\n\t\t\t\t\t\tcontent={node.getConstants(`${id}Info`)}></ldod-tooltip>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<TaxonomyTable node={node} />\n\t\t</div>\n\t);\n};\n","/** @format */\n\nimport { fetcher } from '@core';\n\nconst PATH = `/virtual/taxonomy`;\n\nexport const getVeTaxonomy = async id =>\n\tawait fetcher.get(`${PATH}/restricted/${id}`, null, window.token);\n\nexport const addCategory = async (id, body) =>\n\tawait fetcher.post(`${PATH}/restricted/${id}/category/create`, body, window.token);\n\nexport const deleteCategories = async (taxId, body) =>\n\tawait fetcher.post(`${PATH}/restricted/${taxId}/categories/delete`, body, window.token);\n\nexport const mergeCategories = async (taxId, body) =>\n\tawait fetcher.post(`${PATH}/restricted/${taxId}/categories/merge`, body, window.token);\n\nexport const generateTopics = async (veId, body) =>\n\tawait fetcher.post(`${PATH}/restricted/${veId}/generate`, body, window.token);\n\nexport const addTopics = async (veId, body) =>\n\tawait fetcher.post(`${PATH}/restricted/${veId}/createTopics`, body, window.token);\nexport const editCategory = async (categoryId, body) =>\n\tawait fetcher.post(`${PATH}/restricted/category/${categoryId}/update/`, body, window.token);\n\nexport const extractCategoryFragments = async (categoryId, body) =>\n\tawait fetcher.post(`${PATH}/restricted/category/${categoryId}/extract`, body, window.token);\n","/** @format */\n\nimport constants from '@src/pages/constants';\nimport thisConstants from './constants';\nimport TaxonomyComponent from './taxonomy-component';\nimport taxonomyStyle from './taxonomy.css?inline';\nimport style from '../style.css?inline';\nimport formStyle from '@ui/bootstrap/forms-css.js';\nimport buttonsStyle from '@ui/bootstrap/buttons-css.js';\nimport { DeleteButton, MergeButton } from './merge-delete-buttons';\nimport { computeSelectPureHeight } from '@src/utils';\nimport {\n\taddCategory,\n\taddTopics,\n\tdeleteCategories,\n\tgetVeTaxonomy,\n\tmergeCategories,\n} from './taxonomy-api-requests';\nimport { errorPublisher, loadingPublisher } from '../../../../../../event-module';\n\nconst sheet = new CSSStyleSheet();\nsheet.replaceSync(style + taxonomyStyle + buttonsStyle + formStyle);\n\nexport class LdodVeTaxonomy extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.attachShadow({ mode: 'open' });\n\t\tthis.shadowRoot.adoptedStyleSheets = [sheet];\n\t\tthis.constants = Object.entries(thisConstants).reduce((prev, [key, value]) => {\n\t\t\tprev[key] = value instanceof Array ? value : { ...constants[key], ...value };\n\t\t\treturn prev;\n\t\t}, {});\n\t}\n\n\tget language() {\n\t\treturn this.getAttribute('language');\n\t}\n\n\tget selectedCategories() {\n\t\tconst ids = Array.from(\n\t\t\tthis.shadowRoot.querySelectorAll('table#virtual-taxonomyTable>tbody>tr[selected]')\n\t\t).map(row => row.id);\n\t\treturn this.taxonomy.categories\n\t\t\t.map(cat => cat.externalId)\n\t\t\t.filter(catId => ids.indexOf(catId) !== -1);\n\t}\n\n\tget show() {\n\t\treturn this.hasAttribute('show');\n\t}\n\n\tget taxonomyModal() {\n\t\treturn this.shadowRoot.querySelector('ldod-bs-modal#virtual-taxonomy-modal');\n\t}\n\n\tget generateTopicsModal() {\n\t\treturn this.shadowRoot.querySelector('ldod-bs-modal#virtual-generate-topics-modal');\n\t}\n\n\tget editCategoryModal() {\n\t\treturn this.shadowRoot.querySelector('ldod-bs-modal#virtual-edit-category-modal');\n\t}\n\n\tget extractCategoryFragsModal() {\n\t\treturn this.shadowRoot.querySelector('ldod-bs-modal#virtual-extract-category-frags-modal');\n\t}\n\n\tstatic get observedAttributes() {\n\t\treturn ['data', 'show'];\n\t}\n\n\tgetConstants(key) {\n\t\treturn this.constants[this.language][key];\n\t}\n\tconnectedCallback() {\n\t\tthis.addEventListener('ldod-modal-close', this.handleCloseModal);\n\t}\n\n\tattributeChangedCallback(name, oldV, newV) {\n\t\tthis.onChangedAttribute[name](oldV, newV);\n\t}\n\n\trender() {\n\t\tthis.shadowRoot.innerHTML = '';\n\t\tthis.shadowRoot.appendChild(\n\t\t\t<ldod-bs-modal\n\t\t\t\tid=\"virtual-taxonomy-modal\"\n\t\t\t\tdialog-class=\"modal-xl modal-dialog-scrollable\">\n\t\t\t\t<h5 slot=\"header-slot\">\n\t\t\t\t\t<span>{this.taxonomy.veTitle} - </span>\n\t\t\t\t\t<span>{this.getConstants('taxonomy')}</span>\n\t\t\t\t</h5>\n\t\t\t\t<div slot=\"body-slot\">\n\t\t\t\t\t<TaxonomyComponent node={this} />\n\t\t\t\t</div>\n\t\t\t</ldod-bs-modal>\n\t\t);\n\t\tthis.renderMergeAndDeleteButtons();\n\t\tthis.addEventListeners();\n\t}\n\n\tonChangedAttribute = {\n\t\tshow: () => {\n\t\t\tif (this.show) {\n\t\t\t\tgetVeTaxonomy(this.parent.edition.externalId)\n\t\t\t\t\t.then(async data => {\n\t\t\t\t\t\tthis.emitLoading(true);\n\t\t\t\t\t\tthis.taxonomy = data;\n\t\t\t\t\t\tthis.render();\n\t\t\t\t\t\tthis.taxonomyModal?.toggleAttribute('show', this.show);\n\t\t\t\t\t\tthis.emitLoading(false);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\terrorPublisher(error.msg);\n\t\t\t\t\t});\n\t\t\t}\n\t\t},\n\t};\n\n\taddEventListeners = () => {\n\t\tthis.handleRowsSelection();\n\t\tthis.addEventListener('pointerenter', this.generateTopicsModalLazyLoad, {\n\t\t\tonce: true,\n\t\t});\n\t};\n\n\tgenerateTopicsModalLazyLoad = async () => {\n\t\tthis.shadowRoot.appendChild(await GenerateTopicsModal(this, this.taxonomy.veExternalId));\n\t};\n\n\thandleRowsSelection = () => {\n\t\tthis.shadowRoot.querySelectorAll('table>tbody>tr').forEach(row => {\n\t\t\trow.addEventListener('click', this.onRowSelection);\n\t\t});\n\t};\n\n\tonRowSelection = ({ target }) => {\n\t\tif (['A', 'SPAN'].some(tag => tag === target.nodeName)) return;\n\t\twhile (target.nodeName !== 'TR') target = target.parentElement;\n\t\ttarget.toggleAttribute('selected');\n\t};\n\n\trenderMergeAndDeleteButtons = () => {\n\t\tthis.shadowRoot.querySelector('div#mergeCategory').replaceWith(<MergeButton node={this} />);\n\t\tthis.shadowRoot\n\t\t\t.querySelector('div#deleteCategory')\n\t\t\t.replaceWith(<DeleteButton node={this} />);\n\t};\n\n\tupdateData = (data = this.taxonomy) => {\n\t\tthis.taxonomy = data;\n\t\tconst taxComponent = this.shadowRoot.querySelector('#taxonomyComponent');\n\t\tif (taxComponent) {\n\t\t\ttaxComponent.replaceWith(<TaxonomyComponent node={this} />);\n\t\t\tthis.addEventListeners();\n\t\t}\n\t};\n\n\thandleCloseModal = ({ detail: { id } }) => {\n\t\tthis.onCloseModal[id.replace('virtual-', '')]();\n\t};\n\n\tonCloseModal = {\n\t\t'taxonomy-modal': async () => {\n\t\t\tthis.emitLoading(true);\n\t\t\tthis.toggleAttribute('show', false);\n\t\t\tthis.resetState();\n\t\t\tthis.emitLoading(false);\n\t\t},\n\t\t'generate-topics-modal': () => {\n\t\t\tthis.toggleAttribute('show', true);\n\t\t},\n\t\t'edit-category-modal': () => {\n\t\t\tthis.editCategoryModal.remove();\n\t\t\tthis.toggleAttribute('show', true);\n\t\t},\n\t\t'extract-category-frags-modal': () => {\n\t\t\tdocument.body.removeEventListener('click', this.computeSelectHeight);\n\t\t\tthis.extractCategoryFragsModal.remove();\n\t\t\tthis.toggleAttribute('show', true);\n\t\t},\n\t};\n\n\tresetState = () => {\n\t\tthis.taxonomy = null;\n\t\tthis.shadowRoot.removeChild(this.taxonomyModal);\n\t};\n\n\tonAddCategory = e => {\n\t\te.preventDefault();\n\t\tconst body = Object.fromEntries(new FormData(e.target));\n\t\taddCategory(this.taxonomy.veExternalId, body)\n\t\t\t.then(data => this.updateData(data))\n\t\t\t.catch(error => console.error(error));\n\t};\n\n\tonDeleteCategories = id => {\n\t\tif ((!id && this.selectedCategories < 1) || !confirm(`Proceed with deletion ?`)) return;\n\t\tdeleteCategories(this.taxonomy.externalId, id ? [id] : this.selectedCategories)\n\t\t\t.then(data => this.updateData(data))\n\t\t\t.catch(error => console.error(error));\n\t};\n\n\tonMergeCategories = () => {\n\t\tif (this.selectedCategories < 2) return;\n\t\tmergeCategories(this.taxonomy.externalId, this.selectedCategories)\n\t\t\t.then(data => this.updateData(data))\n\t\t\t.catch(error => console.error(error));\n\t};\n\n\tonGenerateTopics = () => {\n\t\tthis.taxonomyModal.toggleAttribute('show', false);\n\t\tthis.generateTopicsModal.toggleAttribute('show', true);\n\t};\n\n\tonAddTopics = veId => {\n\t\tif (!this.topics?.topics?.length) return;\n\t\taddTopics(veId, this.topics.topics)\n\t\t\t.then(() => this.generateTopicsModal.toggleAttribute('show', false))\n\t\t\t.catch(error => console.error(error));\n\t};\n\n\tonOpenEditModal = async category => {\n\t\tthis.taxonomyModal.toggleAttribute('show', false);\n\t\tthis.shadowRoot.appendChild(await EditCategoryModal(this, category));\n\t\tthis.editCategoryModal.toggleAttribute('show');\n\t};\n\n\tonExtractFrags = async category => {\n\t\tthis.taxonomyModal.toggleAttribute('show', false);\n\t\tthis.shadowRoot.appendChild(await ExtractCategoryFragsModal(this, category));\n\t\tdocument.body.addEventListener('click', this.computeSelectHeight);\n\t\tthis.extractCategoryFragsModal.toggleAttribute('show');\n\t};\n\n\tcomputeSelectHeight = () => {\n\t\tcomputeSelectPureHeight(this.querySelector('select-pure#virtual-extractCatModal'));\n\t};\n\n\temitLoading = isLoading => loadingPublisher(isLoading);\n}\n!customElements.get('ldod-ve-taxonomy') &&\n\tcustomElements.define('ldod-ve-taxonomy', LdodVeTaxonomy);\n\nasync function GenerateTopicsModal(node, veId) {\n\treturn (await import('./generate-topics-modal')).default({\n\t\tnode,\n\t\tveId,\n\t});\n}\n\nasync function EditCategoryModal(node, category) {\n\treturn (await import('./edit-category-modal')).default({ node, category });\n}\n\nasync function ExtractCategoryFragsModal(node, category) {\n\treturn (await import('./extract-category-frags-modal')).default({ node, category });\n}\n"],"names":["thisConstants","taxonomyHeaders","topicsHeaders","pt","addCategory","categoryName","generateTopics","fragments","merge","delete","addCategoryInfo","mergeCategoryInfo","deleteCategoryInfo","generateTopicsInfo","edition","topics","words","cut","iterations","generate","extract","addCats","topicsInfo","wordsInfo","cutInfo","iterationsInfo","extractInfo","generateTopicsTitle","actions","submit","name","updateCategoryName","extractFrags","multipleFrags","usedIn","publicContent","en","es","MergeButton","node","createElement","id","style","height","width","onClick","onMergeCategories","type","inactive","selectedRows","class","is","icon","size","fill","getConstants","placement","content","DeleteButton","onDeleteCategories","TaxonomyTable","classes","headers","constants","taxonomy","categories","length","data","sort","a","b","localeCompare","map","cat","externalId","category","target","to","references","veAcronym","veInters","inter","key","crypto","randomUUID","textFragmentInter","xmlId","urlId","title","createFragment","onExtractFrags","onOpenEditModal","search","JSON","stringify","language","TaxonomyComponent","padding","marginBottom","popover","shadowRoot","querySelector","element","minWidth","clientWidth","virtualEdition","toggleAttribute","onPublicContent","ed","onUsedIn","onSubmit","onAddCategory","required","placeholder","onGenerateTopics","PATH","async","veId","body","fetcher","post","window","token","editCategory","categoryId","extractCategoryFragments","sheet","CSSStyleSheet","replaceSync","buttonsStyle","formStyle","LdodVeTaxonomy","HTMLElement","constructor","super","this","attachShadow","mode","adoptedStyleSheets","Object","entries","reduce","prev","value","Array","getAttribute","selectedCategories","ids","from","querySelectorAll","row","filter","catId","indexOf","show","hasAttribute","taxonomyModal","generateTopicsModal","editCategoryModal","extractCategoryFragsModal","observedAttributes","connectedCallback","addEventListener","handleCloseModal","attributeChangedCallback","oldV","newV","onChangedAttribute","render","innerHTML","appendChild","slot","veTitle","renderMergeAndDeleteButtons","addEventListeners","get","getVeTaxonomy","parent","then","emitLoading","catch","error","console","errorPublisher","msg","handleRowsSelection","generateTopicsModalLazyLoad","once","import","default","GenerateTopicsModal","veExternalId","forEach","onRowSelection","some","tag","nodeName","parentElement","replaceWith","updateData","taxComponent","detail","onCloseModal","replace","resetState","remove","document","removeEventListener","computeSelectHeight","removeChild","e","preventDefault","fromEntries","FormData","confirm","taxId","deleteCategories","mergeCategories","onAddTopics","addTopics","EditCategoryModal","ExtractCategoryFragsModal","computeSelectPureHeight","isLoading","loadingPublisher","customElements","define"],"mappings":"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"}