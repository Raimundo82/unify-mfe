import{createElement as e,createFragment as t}from"@core";class a extends HTMLElement{constructor(e,t){super(),this.root=e,this.form=t,this.hidden=!0}get edition(){return this.getAttribute("edition")}get wrapper(){return this.querySelector("div#date-wrapper")}static get observedAttributes(){return["edition"]}connectedCallback(){this.appendChild(e("div",{id:"date-wrapper"})),this.render()}render(){this.wrapper.innerHTML="",this.wrapper.appendChild(e("div",{class:"form-floating"},e("select",{name:"option",class:"form-select",onChange:this.onDateChange},e("option",{value:"all","data-search-key":"all",selected:!0},this.root.getConstants("all")),e("option",{value:"dated","data-search-key":"dated"},this.root.getConstants("dated")),e("option",{value:"undated","data-search-key":"notDated"},this.root.getConstants("notDated"))),e("label",{"data-search-key":"date"},this.root.getConstants("date"))))}getYearsForm=()=>e(t,null,e("div",{class:"form-floating"},e("input",{style:{height:"auto",width:"175px"},id:"begin-date-input",class:"form-control",type:"number",name:"begin",min:this.beginDate,max:this.endDate,onChange:this.onBeginDateChange,value:this.beginDate,placeholder:"beginDate"}),e("label",{"data-search-key":"beginDate"},this.root.getConstants("beginDate"))),e("div",{class:"form-floating"},e("input",{id:"end-date-input",style:{height:"auto",width:"175px"},class:"form-control",type:"number",name:"end",min:this.beginDate,max:this.endDate,onChange:this.onEndDateChange,value:this.endDate,placeholder:"endDate"}),e("label",{"data-search-key":"endDate"},this.root.getConstants("endDate"))));onEndDateChange=({target:e})=>{const t=this.wrapper.querySelector("#begin-date-input");t.max=e.value,t.value=t.value>e.value?e.value:t.value};onBeginDateChange=({target:e})=>{const t=this.wrapper.querySelector("#end-date-input");t.min=e.value,t.value=t.value<e.value?e.value:t.value};attributeChangedCallback(e){this.onChangeAttribute[e]()}onChangeAttribute={edition:()=>this.onEdition()};onEdition=()=>{if("all"===this.edition)return this.hidden=!0;const e=this.root.data.editions.find((e=>e.acronym===this.edition));this.beginDate=e.beginDate,this.endDate=e.endDate,this.render(),this.hidden=!1};onDateChange=({target:e})=>{if("dated"!==e.value)return this.wrapper.querySelectorAll(":has(input)").forEach((e=>e.remove()));this.wrapper.appendChild(this.getYearsForm())}}!customElements.get("date-select")&&customElements.define("date-select",a);export{a as default};
//# sourceMappingURL=dateWebComp-fa583fd8.js.map
