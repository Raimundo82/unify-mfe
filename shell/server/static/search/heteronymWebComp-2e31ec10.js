import{createElement as t}from"@core";class e extends HTMLElement{constructor(t,e){super(),this.root=t,this.form=e,this.hidden=!0}static get observedAttributes(){return["edition"]}get edition(){return this.getAttribute("edition")}connectedCallback(){this.heteronymCriteriaMode(),this.render()}heteronymCriteriaMode=()=>{this.heteronyms=this.root.data.heteronyms};render(){this.innerHTML="",this.appendChild(t("div",{class:"form-floating",id:"heteronym-container"},t("select",{id:"heteronym",class:"form-select",name:"heteronym"},t("option",{value:"all","data-search-key":"all"},this.root.getConstants("all")),this.heteronyms?.map((e=>{let n=e.xmlId?e.name:this.root.getConstants(e.name);return t("option",{"data-search-key":e.name,value:e.xmlId},n)}))),t("label",{"data-search-key":"heteronym"},this.root.getConstants("heteronyms"))))}attributeChangedCallback(t){this.onChangeAttribute[t]()}onChangeAttribute={edition:()=>this.onEdition()};onEdition=()=>{if("all"===this.edition)return this.hidden=!0;this.heteronyms=this.root.data.editions.find((t=>t.acronym===this.edition)).heteronyms,this.render(),this.hidden=!1}}!customElements.get("heteronym-select")&&customElements.define("heteronym-select",e);export{e as default};
//# sourceMappingURL=heteronymWebComp-2e31ec10.js.map
